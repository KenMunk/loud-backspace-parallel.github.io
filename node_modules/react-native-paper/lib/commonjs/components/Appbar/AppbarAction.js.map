{"version":3,"names":["AppbarAction","size","color","iconColor","icon","disabled","onPress","accessibilityLabel","isLeading","rest","theme","useInternalTheme","actionIconColor","isV3","colors","onSurface","onSurfaceVariant","black","alpha","rgb","string","displayName"],"sources":["AppbarAction.tsx"],"sourcesContent":["import * as React from 'react';\nimport type {\n  StyleProp,\n  TouchableWithoutFeedback,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { useInternalTheme } from '../../core/theming';\nimport { black } from '../../styles/themes/v2/colors';\nimport type { IconSource } from '../Icon';\nimport IconButton from '../IconButton/IconButton';\n\nexport type Props = React.ComponentPropsWithoutRef<typeof IconButton> & {\n  /**\n   *  Custom color for action icon.\n   */\n  color?: string;\n  /**\n   * Name of the icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Optional icon size.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Whether it's the leading button.\n   */\n  isLeading?: boolean;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<TouchableWithoutFeedback>;\n};\n\n/**\n * A component used to display an action item in the appbar.\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/appbar-action-android.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n * import { Platform } from 'react-native';\n *\n * const MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" subtitle={'Subtitle'} />\n *         <Appbar.Action icon=\"magnify\" onPress={() => {}} />\n *         <Appbar.Action icon={MORE_ICON} onPress={() => {}} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarAction = ({\n  size = 24,\n  color: iconColor,\n  icon,\n  disabled,\n  onPress,\n  accessibilityLabel,\n  isLeading,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme();\n\n  const actionIconColor = iconColor\n    ? iconColor\n    : theme.isV3\n    ? isLeading\n      ? theme.colors.onSurface\n      : theme.colors.onSurfaceVariant\n    : color(black).alpha(0.54).rgb().string();\n\n  return (\n    <IconButton\n      size={size}\n      onPress={onPress}\n      iconColor={actionIconColor}\n      icon={icon}\n      disabled={disabled}\n      accessibilityLabel={accessibilityLabel}\n      animated\n      {...rest}\n    />\n  );\n};\n\nAppbarAction.displayName = 'Appbar.Action';\n\nexport default AppbarAction;\n\n// @component-docs ignore-next-line\nexport { AppbarAction };\n"],"mappings":";;;;;;;AAAA;;AAOA;;AAEA;;AACA;;AAEA;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,YAAY,GAAG,QASR;EAAA,IATS;IACpBC,IAAI,GAAG,EADa;IAEpBC,KAAK,EAAEC,SAFa;IAGpBC,IAHoB;IAIpBC,QAJoB;IAKpBC,OALoB;IAMpBC,kBANoB;IAOpBC,SAPoB;IAQpB,GAAGC;EARiB,CAST;EACX,MAAMC,KAAK,GAAG,IAAAC,yBAAA,GAAd;EAEA,MAAMC,eAAe,GAAGT,SAAS,GAC7BA,SAD6B,GAE7BO,KAAK,CAACG,IAAN,GACAL,SAAS,GACPE,KAAK,CAACI,MAAN,CAAaC,SADN,GAEPL,KAAK,CAACI,MAAN,CAAaE,gBAHf,GAIA,IAAAd,cAAA,EAAMe,aAAN,EAAaC,KAAb,CAAmB,IAAnB,EAAyBC,GAAzB,GAA+BC,MAA/B,EANJ;EAQA,oBACE,oBAAC,mBAAD;IACE,IAAI,EAAEnB,IADR;IAEE,OAAO,EAAEK,OAFX;IAGE,SAAS,EAAEM,eAHb;IAIE,IAAI,EAAER,IAJR;IAKE,QAAQ,EAAEC,QALZ;IAME,kBAAkB,EAAEE,kBANtB;IAOE,QAAQ;EAPV,GAQME,IARN,EADF;AAYD,CAhCD;;;AAkCAT,YAAY,CAACqB,WAAb,GAA2B,eAA3B;eAEerB,Y,EAEf"}