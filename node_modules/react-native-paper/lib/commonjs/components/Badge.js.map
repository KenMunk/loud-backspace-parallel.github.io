{"version":3,"names":["defaultSize","Badge","children","size","style","theme","visible","rest","current","opacity","React","useRef","Animated","Value","fontScale","useWindowDimensions","isFirstRendering","animation","scale","useEffect","timing","toValue","duration","useNativeDriver","start","backgroundColor","isV3","colors","error","notification","restStyle","StyleSheet","flatten","textColor","onError","getContrastingColor","white","black","borderRadius","paddingHorizontal","color","fontSize","fonts","regular","lineHeight","height","minWidth","styles","container","withInternalTheme","create","alignSelf","textAlign","textAlignVertical","overflow"],"sources":["Badge.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  useWindowDimensions,\n} from 'react-native';\n\nimport { withInternalTheme } from '../core/theming';\nimport { black, white } from '../styles/themes/v2/colors';\nimport type { InternalTheme } from '../types';\nimport getContrastingColor from '../utils/getContrastingColor';\n\nconst defaultSize = 20;\n\nexport type Props = React.ComponentProps<typeof Animated.Text> & {\n  /**\n   * Whether the badge is visible\n   */\n  visible?: boolean;\n  /**\n   * Content of the `Badge`.\n   */\n  children?: string | number;\n  /**\n   * Size of the `Badge`.\n   */\n  size?: number;\n  style?: StyleProp<TextStyle>;\n  ref?: React.RefObject<typeof Animated.Text>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\n/**\n * Badges are small status descriptors for UI elements.\n * A badge consists of a small circle, typically containing a number or other short set of characters, that appears in proximity to another object.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/badge-1.png\" />\n *     <figcaption>Badge with content</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/badge-2.png\" />\n *     <figcaption>Badge without content</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Badge } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Badge>3</Badge>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Badge = ({\n  children,\n  size = defaultSize,\n  style,\n  theme,\n  visible = true,\n  ...rest\n}: Props) => {\n  const { current: opacity } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { fontScale } = useWindowDimensions();\n\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    Animated.timing(opacity, {\n      toValue: visible ? 1 : 0,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  }, [visible, opacity, scale]);\n\n  const {\n    backgroundColor = theme.isV3\n      ? theme.colors.error\n      : theme.colors?.notification,\n    ...restStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n\n  const textColor = theme.isV3\n    ? theme.colors.onError\n    : getContrastingColor(backgroundColor, white, black);\n\n  const borderRadius = size / 2;\n\n  const paddingHorizontal = theme.isV3 ? 3 : 4;\n\n  return (\n    <Animated.Text\n      numberOfLines={1}\n      style={[\n        {\n          opacity,\n          backgroundColor,\n          color: textColor,\n          fontSize: size * 0.5,\n          ...(!theme.isV3 && theme.fonts.regular),\n          lineHeight: size / fontScale,\n          height: size,\n          minWidth: size,\n          borderRadius,\n          paddingHorizontal,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      {children}\n    </Animated.Text>\n  );\n};\n\nexport default withInternalTheme(Badge);\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-end',\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    overflow: 'hidden',\n  },\n});\n"],"mappings":"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"}