{"version":3,"names":["DialogActions","props","isV3","useInternalTheme","actionsLength","React","Children","toArray","children","length","styles","v3Container","container","style","map","child","i","isValidElement","cloneElement","compact","uppercase","paddingRight","displayName","StyleSheet","create","flexDirection","alignItems","justifyContent","padding","flexGrow","paddingBottom","paddingHorizontal"],"sources":["DialogActions.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogActions`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a list of actions in a Dialog.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/dialog-actions.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Actions>\n *           <Button onPress={() => console.log('Cancel')}>Cancel</Button>\n *           <Button onPress={() => console.log('Ok')}>Ok</Button>\n *         </Dialog.Actions>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogActions = (props: Props) => {\n  const { isV3 } = useInternalTheme();\n  const actionsLength = React.Children.toArray(props.children).length;\n\n  return (\n    <View\n      {...props}\n      style={[isV3 ? styles.v3Container : styles.container, props.style]}\n    >\n      {React.Children.map(props.children, (child, i) =>\n        React.isValidElement(child)\n          ? React.cloneElement(child, {\n              compact: true,\n              uppercase: !isV3,\n              style: isV3 && {\n                paddingRight: i + 1 === actionsLength ? 0 : 8,\n              },\n            })\n          : child\n      )}\n    </View>\n  );\n};\n\nDialogActions.displayName = 'Dialog.Actions';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: 8,\n  },\n  v3Container: {\n    flexDirection: 'row',\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    paddingBottom: 24,\n    paddingHorizontal: 24,\n  },\n});\n\nexport default DialogActions;\n"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,aAAa,GAAIC,KAAD,IAAkB;EACtC,MAAM;IAAEC;EAAF,IAAW,IAAAC,yBAAA,GAAjB;EACA,MAAMC,aAAa,GAAGC,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuBN,KAAK,CAACO,QAA7B,EAAuCC,MAA7D;EAEA,oBACE,oBAAC,iBAAD,eACMR,KADN;IAEE,KAAK,EAAE,CAACC,IAAI,GAAGQ,MAAM,CAACC,WAAV,GAAwBD,MAAM,CAACE,SAApC,EAA+CX,KAAK,CAACY,KAArD;EAFT,IAIGR,KAAK,CAACC,QAAN,CAAeQ,GAAf,CAAmBb,KAAK,CAACO,QAAzB,EAAmC,CAACO,KAAD,EAAQC,CAAR,KAClC,aAAAX,KAAK,CAACY,cAAN,CAAqBF,KAArB,iBACIV,KAAK,CAACa,YAAN,CAAmBH,KAAnB,EAA0B;IACxBI,OAAO,EAAE,IADe;IAExBC,SAAS,EAAE,CAAClB,IAFY;IAGxBW,KAAK,EAAEX,IAAI,IAAI;MACbmB,YAAY,EAAEL,CAAC,GAAG,CAAJ,KAAUZ,aAAV,GAA0B,CAA1B,GAA8B;IAD/B;EAHS,CAA1B,CADJ,GAQIW,KATL,CAJH,CADF;AAkBD,CAtBD;;AAwBAf,aAAa,CAACsB,WAAd,GAA4B,gBAA5B;;AAEA,MAAMZ,MAAM,GAAGa,uBAAA,CAAWC,MAAX,CAAkB;EAC/BZ,SAAS,EAAE;IACTa,aAAa,EAAE,KADN;IAETC,UAAU,EAAE,QAFH;IAGTC,cAAc,EAAE,UAHP;IAITC,OAAO,EAAE;EAJA,CADoB;EAO/BjB,WAAW,EAAE;IACXc,aAAa,EAAE,KADJ;IAEXI,QAAQ,EAAE,CAFC;IAGXH,UAAU,EAAE,QAHD;IAIXC,cAAc,EAAE,UAJL;IAKXG,aAAa,EAAE,EALJ;IAMXC,iBAAiB,EAAE;EANR;AAPkB,CAAlB,CAAf;;eAiBe/B,a"}