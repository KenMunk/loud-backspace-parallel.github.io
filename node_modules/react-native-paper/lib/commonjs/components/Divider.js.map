{"version":3,"names":["Divider","leftInset","horizontalInset","style","theme","bold","rest","dark","isDarkTheme","isV3","dividerColor","colors","surfaceVariant","color","white","black","alpha","rgb","string","height","StyleSheet","hairlineWidth","backgroundColor","styles","create","marginLeft","marginRight","withInternalTheme"],"sources":["Divider.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../core/theming';\nimport { black, white } from '../styles/themes/v2/colors';\nimport type { $RemoveChildren, InternalTheme } from '../types';\n\nexport type Props = $RemoveChildren<typeof View> & {\n  /**\n   * @renamed Renamed from 'inset' to 'leftInset` in v5.x\n   * Whether divider has a left inset.\n   */\n  leftInset?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *  Whether divider has a horizontal inset on both sides.\n   */\n  horizontalInset?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *  Whether divider should be bolded.\n   */\n  bold?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\n/**\n * A divider is a thin, lightweight separator that groups content in lists and page layouts.\n *\n * <div class=\"screenshots\">\n *  <figure>\n *    <img class=\"medium\" src=\"screenshots/divider.png\" />\n *  </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Divider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Text>Lemon</Text>\n *     <Divider />\n *     <Text>Mango</Text>\n *     <Divider />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Divider = ({\n  leftInset,\n  horizontalInset = false,\n  style,\n  theme,\n  bold = false,\n  ...rest\n}: Props) => {\n  const { dark: isDarkTheme, isV3 } = theme;\n\n  const dividerColor = isV3\n    ? theme.colors.surfaceVariant\n    : color(isDarkTheme ? white : black)\n        .alpha(0.12)\n        .rgb()\n        .string();\n\n  return (\n    <View\n      {...rest}\n      style={[\n        { height: StyleSheet.hairlineWidth, backgroundColor: dividerColor },\n        leftInset && styles.leftInset,\n        isV3 && horizontalInset && styles.horizontalInset,\n        isV3 && bold && styles.bold,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  leftInset: {\n    marginLeft: 72,\n  },\n  horizontalInset: {\n    marginLeft: 28,\n    marginRight: 28,\n  },\n  bold: {\n    height: 1,\n  },\n});\n\nexport default withInternalTheme(Divider);\n"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AACA;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,OAAO,GAAG,QAOH;EAAA,IAPI;IACfC,SADe;IAEfC,eAAe,GAAG,KAFH;IAGfC,KAHe;IAIfC,KAJe;IAKfC,IAAI,GAAG,KALQ;IAMf,GAAGC;EANY,CAOJ;EACX,MAAM;IAAEC,IAAI,EAAEC,WAAR;IAAqBC;EAArB,IAA8BL,KAApC;EAEA,MAAMM,YAAY,GAAGD,IAAI,GACrBL,KAAK,CAACO,MAAN,CAAaC,cADQ,GAErB,IAAAC,cAAA,EAAML,WAAW,GAAGM,aAAH,GAAWC,aAA5B,EACGC,KADH,CACS,IADT,EAEGC,GAFH,GAGGC,MAHH,EAFJ;EAOA,oBACE,oBAAC,iBAAD,eACMZ,IADN;IAEE,KAAK,EAAE,CACL;MAAEa,MAAM,EAAEC,uBAAA,CAAWC,aAArB;MAAoCC,eAAe,EAAEZ;IAArD,CADK,EAELT,SAAS,IAAIsB,MAAM,CAACtB,SAFf,EAGLQ,IAAI,IAAIP,eAAR,IAA2BqB,MAAM,CAACrB,eAH7B,EAILO,IAAI,IAAIJ,IAAR,IAAgBkB,MAAM,CAAClB,IAJlB,EAKLF,KALK;EAFT,GADF;AAYD,CA7BD;;AA+BA,MAAMoB,MAAM,GAAGH,uBAAA,CAAWI,MAAX,CAAkB;EAC/BvB,SAAS,EAAE;IACTwB,UAAU,EAAE;EADH,CADoB;EAI/BvB,eAAe,EAAE;IACfuB,UAAU,EAAE,EADG;IAEfC,WAAW,EAAE;EAFE,CAJc;EAQ/BrB,IAAI,EAAE;IACJc,MAAM,EAAE;EADJ;AARyB,CAAlB,CAAf;;eAae,IAAAQ,0BAAA,EAAkB3B,OAAlB,C"}