{"version":3,"names":["SIZE","SCALE","AnimatedFAB","icon","label","accessibilityLabel","accessibilityState","color","customColor","disabled","onPress","onLongPress","theme","style","visible","uppercase","isV3","testID","animateFrom","extended","iconMode","variant","rest","isIOS","Platform","OS","isAnimatedFromRight","isIconStatic","isRTL","I18nManager","current","visibility","React","useRef","Animated","Value","animFAB","animation","scale","textWidth","setTextWidth","useState","textHeight","setTextHeight","borderRadius","useEffect","timing","toValue","duration","useNativeDriver","start","backgroundColor","foregroundColor","getFABColors","rippleColor","alpha","rgb","string","extendedWidth","distance","easing","Easing","linear","onTextLayout","nativeEvent","currentWidth","Math","ceil","lines","width","currentHeight","height","propForDirection","right","reverse","combinedStyles","getCombinedStyles","font","fonts","labelLarge","medium","textStyle","md2Elevation","md3Elevation","newAccessibilityState","opacity","transform","elevation","styles","container","scaleY","interpolate","inputRange","outputRange","standard","StyleSheet","absoluteFill","shadowWrapper","shadow","innerWrapper","iconWrapper","undefined","minWidth","top","translateX","uppercaseLabel","textPlaceholderContainer","create","position","flexDirection","overflow","alignItems","justifyContent","textTransform","withInternalTheme"],"sources":["AnimatedFAB.tsx"],"sourcesContent":["import * as React from 'react';\nimport type {\n  AccessibilityState,\n  NativeSyntheticEvent,\n  TextLayoutEventData,\n} from 'react-native';\nimport {\n  Animated,\n  Easing,\n  I18nManager,\n  Platform,\n  ScrollView,\n  StyleProp,\n  StyleSheet,\n  Text,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, InternalTheme } from '../../types';\nimport type { IconSource } from '../Icon';\nimport Icon from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport AnimatedText from '../Typography/AnimatedText';\nimport { getCombinedStyles, getFABColors } from './utils';\n\nexport type AnimatedFABIconMode = 'static' | 'dynamic';\nexport type AnimatedFABAnimateFrom = 'left' | 'right';\n\nexport type Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Label for extended `FAB`.\n   */\n  label: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Whether icon should be translated to the end of extended `FAB` or be static and stay in the same place. The default value is `dynamic`.\n   */\n  iconMode?: AnimatedFABIconMode;\n  /**\n   * Indicates from which direction animation should be performed. The default value is `right`.\n   */\n  animateFrom?: AnimatedFABAnimateFrom;\n  /**\n   * Whether `FAB` should start animation to extend.\n   */\n  extended: boolean;\n  /**\n   * @supported Available in v3.x with theme version 3\n   *\n   * Color mappings variant for combinations of container and icon colors.\n   */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  testID?: string;\n};\n\nconst SIZE = 56;\nconst SCALE = 0.9;\n\n/**\n * An animated, extending horizontally floating action button represents the primary action in an application.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/animated-fab.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import React from 'react';\n * import {\n *   StyleProp,\n *   ViewStyle,\n *   Animated,\n *   StyleSheet,\n *   Platform,\n *   ScrollView,\n *   Text,\n *   SafeAreaView,\n *   I18nManager,\n * } from 'react-native';\n * import { AnimatedFAB } from 'react-native-paper';\n *\n * const MyComponent = ({\n *   animatedValue,\n *   visible,\n *   extended,\n *   label,\n *   animateFrom,\n *   style,\n *   iconMode,\n * }) => {\n *   const [isExtended, setIsExtended] = React.useState(true);\n *\n *   const isIOS = Platform.OS === 'ios';\n *\n *   const onScroll = ({ nativeEvent }) => {\n *     const currentScrollPosition =\n *       Math.floor(nativeEvent?.contentOffset?.y) ?? 0;\n *\n *     setIsExtended(currentScrollPosition <= 0);\n *   };\n *\n *   const fabStyle = { [animateFrom]: 16 };\n *\n *   return (\n *     <SafeAreaView style={styles.container}>\n *       <ScrollView onScroll={onScroll}>\n *         {[...new Array(100).keys()].map((_, i) => (\n *           <Text>{i}</Text>\n *         ))}\n *       </ScrollView>\n *       <AnimatedFAB\n *         icon={'plus'}\n *         label={'Label'}\n *         extended={isExtended}\n *         onPress={() => console.log('Pressed')}\n *         visible={visible}\n *         animateFrom={'right'}\n *         iconMode={'static'}\n *         style={[styles.fabStyle, style, fabStyle]}\n *       />\n *     </SafeAreaView>\n *   );\n * };\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flexGrow: 1,\n *   },\n *   fabStyle: {\n *     bottom: 16,\n *     right: 16,\n *     position: 'absolute',\n *   },\n * });\n * ```\n */\nconst AnimatedFAB = ({\n  icon,\n  label,\n  accessibilityLabel = label,\n  accessibilityState,\n  color: customColor,\n  disabled,\n  onPress,\n  onLongPress,\n  theme,\n  style,\n  visible = true,\n  uppercase = !theme.isV3,\n  testID,\n  animateFrom = 'right',\n  extended = false,\n  iconMode = 'dynamic',\n  variant = 'primary',\n  ...rest\n}: Props) => {\n  const isIOS = Platform.OS === 'ios';\n  const isAnimatedFromRight = animateFrom === 'right';\n  const isIconStatic = iconMode === 'static';\n  const { isRTL } = I18nManager;\n  const { current: visibility } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { current: animFAB } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { isV3, animation } = theme;\n  const { scale } = animation;\n\n  const [textWidth, setTextWidth] = React.useState<number>(0);\n  const [textHeight, setTextHeight] = React.useState<number>(0);\n\n  const borderRadius = SIZE / (isV3 ? 3.5 : 2);\n\n  React.useEffect(() => {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n\n  const { backgroundColor, foregroundColor } = getFABColors({\n    theme,\n    variant,\n    disabled,\n    customColor,\n    style,\n  });\n\n  const rippleColor = color(foregroundColor).alpha(0.12).rgb().string();\n\n  const extendedWidth = textWidth + SIZE + borderRadius;\n\n  const distance = isAnimatedFromRight\n    ? -textWidth - borderRadius\n    : textWidth + borderRadius;\n\n  React.useEffect(() => {\n    Animated.timing(animFAB, {\n      toValue: !extended ? 0 : distance,\n      duration: 150 * scale,\n      useNativeDriver: true,\n      easing: Easing.linear,\n    }).start();\n  }, [animFAB, scale, distance, extended]);\n\n  const onTextLayout = ({\n    nativeEvent,\n  }: NativeSyntheticEvent<TextLayoutEventData>) => {\n    const currentWidth = Math.ceil(nativeEvent.lines[0].width);\n    const currentHeight = Math.ceil(nativeEvent.lines[0].height);\n\n    if (currentWidth !== textWidth || currentHeight !== textHeight) {\n      setTextHeight(currentHeight);\n\n      if (isIOS) {\n        return setTextWidth(currentWidth - 12);\n      }\n\n      setTextWidth(currentWidth);\n    }\n  };\n\n  const propForDirection = <T,>(right: T[]): T[] => {\n    if (isAnimatedFromRight) {\n      return right;\n    }\n\n    return right.reverse();\n  };\n\n  const combinedStyles = getCombinedStyles({\n    isAnimatedFromRight,\n    isIconStatic,\n    distance,\n    animFAB,\n  });\n\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n  const textStyle = {\n    color: foregroundColor,\n    ...font,\n  };\n\n  const md2Elevation = disabled || !isIOS ? 0 : 6;\n  const md3Elevation = disabled || !isIOS ? 0 : 3;\n\n  const newAccessibilityState = { ...accessibilityState, disabled };\n\n  return (\n    <Surface\n      {...rest}\n      style={\n        [\n          {\n            opacity: visibility,\n            transform: [\n              {\n                scale: visibility,\n              },\n            ],\n            borderRadius,\n          },\n          !isV3 && {\n            elevation: md2Elevation,\n          },\n          styles.container,\n          style,\n        ] as StyleProp<ViewStyle>\n      }\n      {...(isV3 && { elevation: md3Elevation })}\n    >\n      <Animated.View\n        style={[\n          !isV3 && {\n            transform: [\n              {\n                scaleY: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([SCALE, 1]),\n                }),\n              },\n            ],\n          },\n          styles.standard,\n          { borderRadius },\n        ]}\n      >\n        <View style={[StyleSheet.absoluteFill, styles.shadowWrapper]}>\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              disabled ? styles.disabled : styles.shadow,\n              {\n                width: extendedWidth,\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([1, 0.15, 0]),\n                }),\n                borderRadius,\n              },\n            ]}\n          />\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              disabled ? styles.disabled : styles.shadow,\n              {\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([0, 0.85, 1]),\n                }),\n                width: SIZE,\n                borderRadius: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([\n                    SIZE / (extendedWidth / SIZE),\n                    borderRadius,\n                  ]),\n                }),\n              },\n              combinedStyles.absoluteFill,\n            ]}\n          />\n        </View>\n        <Animated.View\n          pointerEvents=\"box-none\"\n          style={[styles.innerWrapper, { borderRadius }]}\n        >\n          <Animated.View\n            style={[\n              styles.standard,\n              {\n                width: extendedWidth,\n                backgroundColor,\n                borderRadius,\n              },\n              combinedStyles.innerWrapper,\n            ]}\n          >\n            <TouchableRipple\n              borderless\n              onPress={onPress}\n              onLongPress={onLongPress}\n              rippleColor={rippleColor}\n              disabled={disabled}\n              accessibilityLabel={accessibilityLabel}\n              accessibilityRole=\"button\"\n              accessibilityState={newAccessibilityState}\n              testID={testID}\n              style={{ borderRadius }}\n            >\n              <View\n                style={[\n                  styles.standard,\n                  {\n                    width: extendedWidth,\n                    borderRadius,\n                  },\n                ]}\n              />\n            </TouchableRipple>\n          </Animated.View>\n        </Animated.View>\n      </Animated.View>\n\n      <Animated.View\n        style={[styles.iconWrapper, combinedStyles.iconWrapper]}\n        pointerEvents=\"none\"\n      >\n        <Icon source={icon} size={24} color={foregroundColor} />\n      </Animated.View>\n\n      <View pointerEvents=\"none\">\n        <AnimatedText\n          variant=\"labelLarge\"\n          numberOfLines={1}\n          onTextLayout={isIOS ? onTextLayout : undefined}\n          ellipsizeMode={'tail'}\n          style={[\n            {\n              [isAnimatedFromRight || isRTL ? 'right' : 'left']: isIconStatic\n                ? textWidth - SIZE + borderRadius / (isV3 ? 1 : 2)\n                : borderRadius,\n            },\n            {\n              minWidth: textWidth,\n              top: -SIZE / 2 - textHeight / 2,\n              opacity: animFAB.interpolate({\n                inputRange: propForDirection([distance, 0.7 * distance, 0]),\n                outputRange: propForDirection([1, 0, 0]),\n              }),\n              transform: [\n                {\n                  translateX: animFAB.interpolate({\n                    inputRange: propForDirection([distance, 0]),\n                    outputRange: propForDirection([0, SIZE]),\n                  }),\n                },\n              ],\n            },\n            styles.label,\n            uppercase && styles.uppercaseLabel,\n            textStyle,\n          ]}\n        >\n          {label}\n        </AnimatedText>\n      </View>\n\n      {!isIOS && (\n        // Method `onTextLayout` on Android returns sizes of text visible on the screen,\n        // however during render the text in `FAB` isn't fully visible. In order to get\n        // proper text measurements there is a need to additionaly render that text, but\n        // wrapped in absolutely positioned `ScrollView` which height is 0.\n        <ScrollView style={styles.textPlaceholderContainer}>\n          <Text onTextLayout={onTextLayout}>{label}</Text>\n        </ScrollView>\n      )}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  standard: {\n    height: SIZE,\n  },\n  disabled: {\n    elevation: 0,\n  },\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n  },\n  innerWrapper: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n  },\n  shadowWrapper: {\n    elevation: 0,\n  },\n  shadow: {\n    elevation: 6,\n  },\n  iconWrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    height: SIZE,\n    width: SIZE,\n  },\n  label: {\n    position: 'absolute',\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  textPlaceholderContainer: {\n    height: 0,\n    position: 'absolute',\n  },\n});\n\nexport default withInternalTheme(AnimatedFAB);\n"],"mappings":"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"}