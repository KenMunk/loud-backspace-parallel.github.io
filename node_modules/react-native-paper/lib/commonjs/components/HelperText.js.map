{"version":3,"names":["HelperText","style","type","visible","theme","onLayout","padding","rest","current","shown","React","useRef","Animated","Value","textHeight","scale","animation","maxFontSizeMultiplier","useEffect","timing","toValue","duration","useNativeDriver","start","handleTextLayout","e","nativeEvent","layout","height","colors","dark","textColor","error","color","isV3","onSurface","text","alpha","rgb","string","styles","opacity","transform","translateY","interpolate","inputRange","outputRange","children","StyleSheet","create","fontSize","paddingVertical","paddingHorizontal","withInternalTheme"],"sources":["HelperText.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../core/theming';\nimport type { $Omit, InternalTheme } from '../types';\nimport AnimatedText from './Typography/AnimatedText';\n\nexport type Props = $Omit<\n  $Omit<React.ComponentPropsWithRef<typeof AnimatedText>, 'padding'>,\n  'type'\n> & {\n  /**\n   * Type of the helper text.\n   */\n  type: 'error' | 'info';\n  /**\n   * Whether to display the helper text.\n   */\n  visible?: boolean;\n  /**\n   * Whether to apply padding to the helper text.\n   */\n  padding?: 'none' | 'normal';\n  /**\n   * Text content of the HelperText.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\n/**\n * Helper text is used in conjuction with input elements to provide additional hints for the user.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/helper-text.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { HelperText, TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *    const onChangeText = text => setText(text);\n *\n *   const hasErrors = () => {\n *     return !text.includes('@');\n *   };\n *\n *  return (\n *     <View>\n *       <TextInput label=\"Email\" value={text} onChangeText={onChangeText} />\n *       <HelperText type=\"error\" visible={hasErrors()}>\n *         Email address is invalid!\n *       </HelperText>\n *     </View>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst HelperText = ({\n  style,\n  type = 'info',\n  visible = true,\n  theme,\n  onLayout,\n  padding = 'normal',\n  ...rest\n}: Props) => {\n  const { current: shown } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n\n  let { current: textHeight } = React.useRef<number>(0);\n\n  const { scale } = theme.animation;\n\n  const { maxFontSizeMultiplier = 1.5 } = rest;\n\n  React.useEffect(() => {\n    if (visible) {\n      // show text\n      Animated.timing(shown, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      // hide text\n      Animated.timing(shown, {\n        toValue: 0,\n        duration: 180 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, shown]);\n\n  const handleTextLayout = (e: LayoutChangeEvent) => {\n    onLayout?.(e);\n    textHeight = e.nativeEvent.layout.height;\n  };\n\n  const { colors, dark } = theme;\n\n  const textColor =\n    type === 'error'\n      ? colors?.error\n      : color(theme.isV3 ? theme.colors.onSurface : theme?.colors?.text)\n          .alpha(dark ? 0.7 : 0.54)\n          .rgb()\n          .string();\n\n  return (\n    <AnimatedText\n      onLayout={handleTextLayout}\n      style={[\n        styles.text,\n        padding !== 'none' ? styles.padding : {},\n        {\n          color: textColor,\n          opacity: shown,\n          transform:\n            visible && type === 'error'\n              ? [\n                  {\n                    translateY: shown.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [-textHeight / 2, 0],\n                    }),\n                  },\n                ]\n              : [],\n        },\n        style,\n      ]}\n      maxFontSizeMultiplier={maxFontSizeMultiplier}\n      {...rest}\n    >\n      {rest.children}\n    </AnimatedText>\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 12,\n    paddingVertical: 4,\n  },\n  padding: {\n    paddingHorizontal: 12,\n  },\n});\n\nexport default withInternalTheme(HelperText);\n"],"mappings":"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"}