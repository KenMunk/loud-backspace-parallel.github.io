{"version":3,"names":["getBorderColor","theme","disabled","isV3","colors","surfaceDisabled","outline","undefined","getBackgroundColor","isMode","selected","customContainerColor","primary","surfaceVariant","secondaryContainer","inverseSurface","getIconColor","customIconColor","onSurfaceDisabled","onPrimary","onSecondaryContainer","onSurfaceVariant","inverseOnSurface","text","getRippleColor","iconColor","color","alpha","rgb","string","getIconButtonColor","mode","modeToCompare","baseIconColorProps","backgroundColor","rippleColor","borderColor"],"sources":["utils.ts"],"sourcesContent":["import color from 'color';\n\nimport type { InternalTheme } from '../../types';\n\ntype IconButtonMode = 'outlined' | 'contained' | 'contained-tonal';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  isMode: (mode: IconButtonMode) => boolean;\n  disabled?: boolean;\n  selected?: boolean;\n};\n\nconst getBorderColor = ({\n  theme,\n  disabled,\n}: {\n  theme: InternalTheme;\n  disabled?: boolean;\n}) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.surfaceDisabled;\n    }\n\n    return theme.colors.outline;\n  }\n\n  return undefined;\n};\n\nconst getBackgroundColor = ({\n  theme,\n  isMode,\n  disabled,\n  selected,\n  customContainerColor,\n}: BaseProps & { customContainerColor?: string }) => {\n  if (theme.isV3) {\n    if (disabled) {\n      if (isMode('contained') || isMode('contained-tonal')) {\n        return theme.colors.surfaceDisabled;\n      }\n    }\n\n    if (typeof customContainerColor !== 'undefined') {\n      return customContainerColor;\n    }\n\n    if (isMode('contained')) {\n      if (selected) {\n        return theme.colors.primary;\n      }\n      return theme.colors.surfaceVariant;\n    }\n\n    if (isMode('contained-tonal')) {\n      if (selected) {\n        return theme.colors.secondaryContainer;\n      }\n      return theme.colors.surfaceVariant;\n    }\n\n    if (isMode('outlined')) {\n      if (selected) {\n        return theme.colors.inverseSurface;\n      }\n    }\n  }\n\n  if (typeof customContainerColor !== 'undefined') {\n    return customContainerColor;\n  }\n\n  return undefined;\n};\n\nconst getIconColor = ({\n  theme,\n  isMode,\n  disabled,\n  selected,\n  customIconColor,\n}: BaseProps & { customIconColor?: string }) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (typeof customIconColor !== 'undefined') {\n      return customIconColor;\n    }\n\n    if (isMode('contained')) {\n      if (selected) {\n        return theme.colors.onPrimary;\n      }\n      return theme.colors.primary;\n    }\n\n    if (isMode('contained-tonal')) {\n      if (selected) {\n        return theme.colors.onSecondaryContainer;\n      }\n      return theme.colors.onSurfaceVariant;\n    }\n\n    if (isMode('outlined')) {\n      if (selected) {\n        return theme.colors.inverseOnSurface;\n      }\n      return theme.colors.onSurfaceVariant;\n    }\n\n    if (selected) {\n      return theme.colors.primary;\n    }\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (typeof customIconColor !== 'undefined') {\n    return customIconColor;\n  }\n\n  return theme.colors.text;\n};\n\nconst getRippleColor = ({\n  theme,\n  iconColor,\n}: {\n  theme: InternalTheme;\n  iconColor: string;\n}) => {\n  if (theme.isV3) {\n    return color(iconColor).alpha(0.12).rgb().string();\n  }\n  return color(iconColor).alpha(0.32).rgb().string();\n};\n\nexport const getIconButtonColor = ({\n  theme,\n  disabled,\n  mode,\n  selected,\n  customIconColor,\n  customContainerColor,\n}: {\n  theme: InternalTheme;\n  disabled?: boolean;\n  selected?: boolean;\n  mode?: IconButtonMode;\n  customIconColor?: string;\n  customContainerColor?: string;\n}) => {\n  const isMode = (modeToCompare: IconButtonMode) => {\n    return mode === modeToCompare;\n  };\n\n  const baseIconColorProps = {\n    theme,\n    isMode,\n    disabled,\n    selected,\n  };\n\n  const iconColor = getIconColor({\n    ...baseIconColorProps,\n    customIconColor,\n  });\n\n  return {\n    iconColor,\n    backgroundColor: getBackgroundColor({\n      ...baseIconColorProps,\n      customContainerColor,\n    }),\n    rippleColor: getRippleColor({ theme, iconColor }),\n    borderColor: getBorderColor({ theme, disabled }),\n  };\n};\n"],"mappings":"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"}