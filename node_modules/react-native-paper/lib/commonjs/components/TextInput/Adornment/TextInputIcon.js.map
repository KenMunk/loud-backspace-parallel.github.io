{"version":3,"names":["StyleContext","React","createContext","style","isTextInputFocused","forceFocus","testID","IconAdornment","icon","topPosition","side","isV3","useInternalTheme","ICON_OFFSET","getConstants","top","contextState","TextInputIcon","onPress","forceTextInputFocus","color","rest","useContext","onPressWithFocusControl","useCallback","theme","iconColor","disabled","colors","onSurface","onSurfaceVariant","text","styles","container","iconButton","ICON_SIZE","displayName","defaultProps","StyleSheet","create","position","width","height","justifyContent","alignItems","margin"],"sources":["TextInputIcon.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport { useInternalTheme } from '../../../core/theming';\nimport type { $Omit, ThemeProp } from '../../../types';\nimport type { IconSource } from '../../Icon';\nimport IconButton from '../../IconButton/IconButton';\nimport { ICON_SIZE } from '../constants';\nimport { getConstants } from '../helpers';\n\nexport type Props = $Omit<\n  React.ComponentProps<typeof IconButton>,\n  'icon' | 'theme' | 'color'\n> & {\n  /**\n   * @renamed Renamed from 'name' to 'icon` in v5.x\n   * Icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Whether the TextInput will focus after onPress.\n   */\n  forceTextInputFocus?: boolean;\n  /**\n   * Color of the icon or a function receiving a boolean indicating whether the TextInput is focused and returning the color.\n   */\n  color?: ((isTextInputFocused: boolean) => string | undefined) | string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\ntype StyleContextType = {\n  style: StyleProp<ViewStyle>;\n  isTextInputFocused: boolean;\n  forceFocus: () => void;\n  testID: string;\n};\n\nconst StyleContext = React.createContext<StyleContextType>({\n  style: {},\n  isTextInputFocused: false,\n  forceFocus: () => {},\n  testID: '',\n});\n\nconst IconAdornment: React.FunctionComponent<\n  {\n    testID: string;\n    icon: React.ReactNode;\n    topPosition: number;\n    side: 'left' | 'right';\n  } & Omit<StyleContextType, 'style'>\n> = ({ icon, topPosition, side, isTextInputFocused, forceFocus, testID }) => {\n  const { isV3 } = useInternalTheme();\n  const { ICON_OFFSET } = getConstants(isV3);\n\n  const style = {\n    top: topPosition,\n    [side]: ICON_OFFSET,\n  };\n  const contextState = { style, isTextInputFocused, forceFocus, testID };\n\n  return (\n    <StyleContext.Provider value={contextState}>{icon}</StyleContext.Provider>\n  );\n};\n\n/**\n * A component to render a leading / trailing icon in the TextInput\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/textinput-flat.icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *   return (\n *     <TextInput\n *       label=\"Password\"\n *       secureTextEntry\n *       right={<TextInput.Icon icon=\"eye\" />}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst TextInputIcon = ({\n  icon,\n  onPress,\n  forceTextInputFocus,\n  color,\n  ...rest\n}: Props) => {\n  const { style, isTextInputFocused, forceFocus, testID } =\n    React.useContext(StyleContext);\n\n  const onPressWithFocusControl = React.useCallback(() => {\n    if (forceTextInputFocus && !isTextInputFocused) {\n      forceFocus();\n    }\n    onPress?.();\n  }, [forceTextInputFocus, forceFocus, isTextInputFocused, onPress]);\n\n  const theme = useInternalTheme();\n\n  let iconColor = color;\n\n  if (theme.isV3) {\n    if (rest.disabled) {\n      iconColor = theme.colors.onSurface;\n    }\n    iconColor = theme.colors.onSurfaceVariant;\n  } else {\n    iconColor = theme.colors.text;\n  }\n\n  return (\n    <View style={[styles.container, style]}>\n      <IconButton\n        icon={icon}\n        style={styles.iconButton}\n        size={ICON_SIZE}\n        onPress={onPressWithFocusControl}\n        iconColor={\n          typeof color === 'function' ? color(isTextInputFocused) : iconColor\n        }\n        testID={testID}\n        {...rest}\n      />\n    </View>\n  );\n};\nTextInputIcon.displayName = 'TextInput.Icon';\n\nTextInputIcon.defaultProps = {\n  forceTextInputFocus: true,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    width: ICON_SIZE,\n    height: ICON_SIZE,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  iconButton: {\n    margin: 0,\n  },\n});\n\nexport default TextInputIcon;\n\n// @component-docs ignore-next-line\nexport { IconAdornment };\n"],"mappings":"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"}