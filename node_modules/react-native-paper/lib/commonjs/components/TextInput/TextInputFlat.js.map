{"version":3,"names":["TextInputFlat","disabled","editable","label","error","selectionColor","underlineColor","underlineStyle","activeUnderlineColor","textColor","dense","style","theme","render","props","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","testID","rest","isAndroid","Platform","OS","colors","isV3","roundness","font","fonts","bodyLarge","regular","hasActiveOutline","focused","LABEL_PADDING_TOP","FLAT_INPUT_OFFSET","MIN_HEIGHT","getConstants","fontSize","fontSizeStyle","lineHeight","fontWeight","height","paddingHorizontal","textAlign","viewStyle","StyleSheet","flatten","MAXIMIZED_LABEL_FONT_SIZE","isPaddingHorizontalPassed","undefined","adornmentConfig","getAdornmentConfig","paddingLeft","paddingRight","calculateFlatInputHorizontalPadding","leftLayout","rightLayout","rightAffixWidth","width","ADORNMENT_SIZE","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","getAdornmentStyleAdjustmentForNativeInput","inputOffset","mode","InputMode","Flat","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","backgroundColor","getFlatInputColors","containerStyle","borderTopLeftRadius","borderTopRightRadius","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelLayout","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","minInputHeight","MIN_DENSE_HEIGHT_WL","MIN_DENSE_HEIGHT","LABEL_PADDING_TOP_DENSE","inputHeight","calculateInputHeight","topPosition","calculateLabelTopPosition","console","warn","paddingSettings","offset","scale","styles","inputFlatDense","inputFlat","pad","calculatePadding","paddingFlat","adjustPaddingFlat","baseLabelTranslateY","MINIMIZED_LABEL_Y_OFFSET","placeholderOpacity","interpolatePlaceholder","labeled","measured","minHeight","flatHeight","iconTopPosition","leftAffixTopPosition","calculateFlatAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","placeholderStyle","placeholder","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","paddingOffset","maxFontSizeMultiplier","affixTopPosition","AdornmentSide","Left","Right","onAffixChange","adornmentProps","AdornmentType","Affix","Icon","isTextInputFocused","length","textStyle","visible","labelContainer","absoluteFill","densePatchContainer","patchContainer","ref","underlineColorAndroid","input","color","textAlignVertical","outline","Underline","useInternalTheme","activeScale","underline","md3Underline","transform","scaleY","create","position","bottom","zIndex","paddingTop","paddingBottom","flexGrow","margin"],"sources":["TextInputFlat.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextInput as NativeTextInput,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\nimport TextInputAdornment, {\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n} from './Adornment/TextInputAdornment';\nimport {\n  ADORNMENT_SIZE,\n  LABEL_PADDING_TOP_DENSE,\n  LABEL_WIGGLE_X_OFFSET,\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_Y_OFFSET,\n  MIN_DENSE_HEIGHT,\n  MIN_DENSE_HEIGHT_WL,\n} from './constants';\nimport {\n  adjustPaddingFlat,\n  calculateFlatAffixTopPosition,\n  calculateFlatInputHorizontalPadding,\n  calculateInputHeight,\n  calculateLabelTopPosition,\n  calculatePadding,\n  getConstants,\n  getFlatInputColors,\n  interpolatePlaceholder,\n  Padding,\n} from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport type { ChildTextInputProps, RenderProps } from './types';\n\nconst TextInputFlat = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor,\n  underlineColor,\n  underlineStyle,\n  activeUnderlineColor,\n  textColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input-flat',\n  ...rest\n}: ChildTextInputProps) => {\n  const isAndroid = Platform.OS === 'android';\n  const { colors, isV3, roundness } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const { LABEL_PADDING_TOP, FLAT_INPUT_OFFSET, MIN_HEIGHT } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    lineHeight,\n    fontWeight,\n    height,\n    paddingHorizontal,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  const isPaddingHorizontalPassed =\n    paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n\n  const adornmentConfig = getAdornmentConfig({\n    left,\n    right,\n  });\n\n  let { paddingLeft, paddingRight } = calculateFlatInputHorizontalPadding({\n    adornmentConfig,\n    isV3,\n  });\n\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal as number;\n    paddingRight = paddingHorizontal as number;\n  }\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      paddingHorizontal,\n      inputOffset: FLAT_INPUT_OFFSET,\n      mode: InputMode.Flat,\n      isV3,\n    });\n\n  const {\n    inputTextColor,\n    activeColor,\n    underlineColorCustom,\n    placeholderColor,\n    errorColor,\n    backgroundColor,\n  } = getFlatInputColors({\n    underlineColor,\n    activeUnderlineColor,\n    textColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const containerStyle = {\n    backgroundColor,\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness,\n  };\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\n      (labelHalfWidth - (labelScale * labelWidth) / 2) +\n    (1 - labelScale) *\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\n      paddingLeft;\n\n  const minInputHeight = dense\n    ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE\n    : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid,\n    styles: StyleSheet.flatten(\n      dense ? styles.inputFlatDense : styles.inputFlat\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingFlat = adjustPaddingFlat({\n    ...paddingSettings,\n    pad,\n  });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const minHeight =\n    height ||\n    (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n  const flatHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n  const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n\n  const leftAffixTopPosition = leftLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: leftLayout.height,\n      })\n    : null;\n\n  const rightAffixTopPosition = rightLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: rightLayout.height,\n      })\n    : null;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    paddingOffset: isAndroid\n      ? {\n          paddingLeft: I18nManager.isRTL ? paddingRight : paddingLeft,\n          paddingRight: I18nManager.isRTL ? paddingLeft : paddingRight,\n        }\n      : { paddingRight, paddingLeft },\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    errorColor,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n  };\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    paddingHorizontal,\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Affix]: affixTopPosition,\n      [AdornmentType.Icon]: iconTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={[containerStyle, viewStyle]}>\n      <Underline\n        style={underlineStyle}\n        hasActiveOutline={hasActiveOutline}\n        parentState={parentState}\n        underlineColorCustom={underlineColorCustom}\n        error={error}\n        colors={colors}\n        activeColor={activeColor}\n      />\n      <View\n        style={[\n          styles.labelContainer,\n          {\n            minHeight,\n          },\n        ]}\n      >\n        {!isAndroid && multiline && !!label && (\n          // Workaround for: https://github.com/callstack/react-native-paper/issues/2799\n          // Patch for a multiline TextInput with fixed height, which allow to avoid covering input label with its value.\n          <View\n            testID=\"patch-container\"\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              dense ? styles.densePatchContainer : styles.patchContainer,\n              {\n                backgroundColor:\n                  viewStyle.backgroundColor || containerStyle.backgroundColor,\n                left: paddingLeft,\n                right: paddingRight,\n              },\n            ]}\n          />\n        )}\n        <InputLabel parentState={parentState} labelProps={labelProps} />\n        {render?.({\n          testID,\n          ...rest,\n          ref: innerRef,\n          onChangeText,\n          placeholder: label ? parentState.placeholder : rest.placeholder,\n          placeholderTextColor: placeholderTextColor ?? placeholderColor,\n          editable: !disabled && editable,\n          selectionColor:\n            typeof selectionColor === 'undefined'\n              ? activeColor\n              : selectionColor,\n          onFocus,\n          onBlur,\n          underlineColorAndroid: 'transparent',\n          multiline,\n          style: [\n            styles.input,\n            { paddingLeft, paddingRight },\n            !multiline || (multiline && height) ? { height: flatHeight } : {},\n            paddingFlat,\n            {\n              ...font,\n              fontSize,\n              lineHeight,\n              fontWeight,\n              color: inputTextColor,\n              textAlignVertical: multiline ? 'top' : 'center',\n              textAlign: textAlign\n                ? textAlign\n                : I18nManager.getConstants().isRTL\n                ? 'right'\n                : 'left',\n            },\n            Platform.OS === 'web' && { outline: 'none' },\n            adornmentStyleAdjustmentForNativeInput,\n          ],\n        })}\n      </View>\n      <TextInputAdornment {...adornmentProps} />\n    </View>\n  );\n};\n\nexport default TextInputFlat;\n\ntype UnderlineProps = {\n  parentState: {\n    focused: boolean;\n  };\n  error?: boolean;\n  colors?: {\n    error?: string;\n  };\n  activeColor: string;\n  underlineColorCustom?: string;\n  hasActiveOutline?: boolean;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst Underline = ({\n  parentState,\n  error,\n  colors,\n  activeColor,\n  underlineColorCustom,\n  hasActiveOutline,\n  style,\n}: UnderlineProps) => {\n  const { isV3 } = useInternalTheme();\n\n  let backgroundColor = parentState.focused\n    ? activeColor\n    : underlineColorCustom;\n\n  if (error) backgroundColor = colors?.error;\n\n  const activeScale = isV3 ? 2 : 1;\n\n  return (\n    <Animated.View\n      testID=\"text-input-underline\"\n      style={[\n        styles.underline,\n        isV3 && styles.md3Underline,\n        {\n          backgroundColor,\n          // Underlines is thinner when input is not focused\n          transform: [\n            {\n              scaleY: (isV3 ? hasActiveOutline : parentState.focused)\n                ? activeScale\n                : 0.5,\n            },\n          ],\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n    zIndex: 1,\n  },\n  md3Underline: {\n    height: 1,\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2,\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2,\n  },\n});\n"],"mappings":"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"}