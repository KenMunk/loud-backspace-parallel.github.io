{"version":3,"names":["TextInputOutlined","disabled","editable","label","error","selectionColor","underlineColor","_underlineColor","outlineColor","customOutlineColor","activeOutlineColor","outlineStyle","textColor","dense","style","theme","render","props","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","testID","rest","adornmentConfig","getAdornmentConfig","colors","isV3","roundness","font","fonts","bodyLarge","regular","hasActiveOutline","focused","INPUT_PADDING_HORIZONTAL","MIN_HEIGHT","ADORNMENT_OFFSET","getConstants","fontSize","fontSizeStyle","fontWeight","lineHeight","height","backgroundColor","background","textAlign","viewStyle","StyleSheet","flatten","MAXIMIZED_LABEL_FONT_SIZE","inputTextColor","activeColor","placeholderColor","errorColor","getOutlinedInputColors","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","side","type","AdornmentSide","Left","AdornmentType","Icon","ADORNMENT_SIZE","minInputHeight","MIN_DENSE_HEIGHT_OUTLINED","LABEL_PADDING_TOP","inputHeight","calculateInputHeight","topPosition","calculateLabelTopPosition","console","warn","paddingSettings","offset","scale","isAndroid","Platform","OS","styles","inputOutlinedDense","inputOutlined","pad","calculatePadding","paddingOut","adjustPaddingOut","baseLabelTranslateY","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","placeholderOpacity","interpolatePlaceholder","labeled","measured","placeholderStyle","position","paddingHorizontal","labelProps","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","maxFontSizeMultiplier","minHeight","outlinedHeight","LABEL_PADDING_TOP_DENSE","leftLayout","rightLayout","leftAffixTopPosition","calculateOutlinedIconAndAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","getAdornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","Right","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","labelContainer","paddingTop","LabelBackground","ref","placeholder","underlineColorAndroid","input","color","textAlignVertical","outline","Outline","borderRadius","borderWidth","borderColor","create","top","bottom","paddingBottom","flexGrow","margin","zIndex"],"sources":["TextInputOutlined.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n  ColorValue,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  LABEL_PADDING_TOP,\n  MIN_DENSE_HEIGHT_OUTLINED,\n  LABEL_PADDING_TOP_DENSE,\n} from './constants';\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  interpolatePlaceholder,\n  calculateOutlinedIconAndAffixTopPosition,\n  getOutlinedInputColors,\n  getConstants,\n} from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nconst TextInputOutlined = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor,\n  underlineColor: _underlineColor,\n  outlineColor: customOutlineColor,\n  activeOutlineColor,\n  outlineStyle,\n  textColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input-outlined',\n  ...rest\n}: ChildTextInputProps) => {\n  const adornmentConfig = getAdornmentConfig({ left, right });\n\n  const { colors, isV3, roundness } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const { INPUT_PADDING_HORIZONTAL, MIN_HEIGHT, ADORNMENT_OFFSET } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    lineHeight,\n    height,\n    backgroundColor = colors?.background,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  const {\n    inputTextColor,\n    activeColor,\n    outlineColor,\n    placeholderColor,\n    errorColor,\n  } = getOutlinedInputColors({\n    activeOutlineColor,\n    customOutlineColor,\n    textColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\n    (labelHalfWidth -\n      (labelScale * labelWidth) / 2 -\n      (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Left && type === AdornmentType.Icon\n  );\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset =\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\n      (ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\n  }\n\n  const minInputHeight =\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    LABEL_PADDING_TOP\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: LABEL_PADDING_TOP,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(\n      dense ? styles.inputOutlinedDense : styles.inputOutlined\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const placeholderStyle = {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  };\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    backgroundColor: backgroundColor as ColorValue,\n    errorColor,\n    labelTranslationXOffset,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n  };\n\n  const minHeight = (height ||\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT)) as number;\n\n  const outlinedHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE / 2 : LABEL_PADDING_TOP) : 0);\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      mode: 'outlined',\n      isV3,\n    });\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={viewStyle}>\n      {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n      <Outline\n        isV3={isV3}\n        style={outlineStyle}\n        roundness={roundness}\n        hasActiveOutline={hasActiveOutline}\n        focused={parentState.focused}\n        activeColor={activeColor}\n        outlineColor={outlineColor}\n        backgroundColor={backgroundColor}\n      />\n      <View>\n        <View\n          style={[\n            styles.labelContainer,\n            {\n              paddingTop: LABEL_PADDING_TOP,\n              minHeight,\n            },\n          ]}\n        >\n          <InputLabel\n            parentState={parentState}\n            labelProps={labelProps}\n            labelBackground={LabelBackground}\n            maxFontSizeMultiplier={rest.maxFontSizeMultiplier}\n          />\n          {render?.({\n            testID,\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            placeholder: label ? parentState.placeholder : rest.placeholder,\n            placeholderTextColor: placeholderTextColor || placeholderColor,\n            editable: !disabled && editable,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              !multiline || (multiline && height)\n                ? { height: inputHeight }\n                : {},\n              paddingOut,\n              {\n                ...font,\n                fontSize,\n                lineHeight,\n                fontWeight,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n                textAlign: textAlign\n                  ? textAlign\n                  : I18nManager.getConstants().isRTL\n                  ? 'right'\n                  : 'left',\n                paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n              },\n              Platform.OS === 'web' && { outline: 'none' },\n              adornmentStyleAdjustmentForNativeInput,\n            ],\n          } as RenderProps)}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    </View>\n  );\n};\n\nexport default TextInputOutlined;\n\ntype OutlineProps = {\n  isV3: boolean;\n  activeColor: string;\n  backgroundColor: ColorValue;\n  hasActiveOutline?: boolean;\n  focused?: boolean;\n  outlineColor?: string;\n  roundness?: number;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst Outline = ({\n  isV3,\n  activeColor,\n  backgroundColor,\n  hasActiveOutline,\n  focused,\n  outlineColor,\n  roundness,\n  style,\n}: OutlineProps) => (\n  <View\n    testID=\"text-input-outline\"\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: roundness,\n        borderWidth: (isV3 ? hasActiveOutline : focused) ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n      style,\n    ]}\n  />\n);\n\nconst styles = StyleSheet.create({\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  labelContainer: {\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"],"mappings":"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"}