{"version":3,"names":["calculateLabelTopPosition","labelHeight","height","optionalPadding","customHeight","Math","floor","calculateInputHeight","minHeight","finalHeight","calculatePadding","props","multiline","result","calculateTextAreaPadding","calculateInputPadding","max","dense","topPosition","fontSize","scale","offset","isAndroid","refFontSize","min","adjustPaddingOut","pad","label","lineHeight","fontHeight","refFontHeight","paddingTop","paddingBottom","adjustPaddingFlat","styles","topResult","bottomResult","interpolatePlaceholder","labeled","hasActiveOutline","interpolate","inputRange","outputRange","calculateFlatAffixTopPosition","affixHeight","inputHeightWithoutPadding","halfOfTheInputHeightDecreasedByAffixHeight","calculateOutlinedIconAndAffixTopPosition","labelYOffset","calculateFlatInputHorizontalPadding","adornmentConfig","isV3","LABEL_PADDING_HORIZONTAL","ADORNMENT_OFFSET","FLAT_INPUT_OFFSET","getConstants","paddingLeft","paddingRight","forEach","type","side","AdornmentType","Icon","AdornmentSide","Left","ADORNMENT_SIZE","Right","Affix","getInputTextColor","theme","textColor","disabled","mode","isFlat","colors","onSurfaceDisabled","onSurfaceVariant","onSurface","color","text","alpha","rgb","string","getActiveColor","error","activeUnderlineColor","activeOutlineColor","modeColor","primary","getPlaceholderColor","placeholder","getFlatBackgroundColor","MD3LightTheme","onSecondaryContainer","surfaceVariant","undefined","dark","background","lighten","darken","getFlatUnderlineColor","underlineColor","getOutlinedOutlineInputColor","customOutlineColor","isTransparent","surfaceDisabled","outline","getFlatInputColors","baseFlatColorProps","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","backgroundColor","getOutlinedInputColors","baseOutlinedColorProps","outlineColor","AFFIX_OFFSET","ICON_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","INPUT_PADDING_HORIZONTAL","OUTLINED_INPUT_OFFSET","MD3_AFFIX_OFFSET","MD3_ICON_OFFSET","MD3_LABEL_PADDING_TOP","MD3_LABEL_PADDING_HORIZONTAL","MD3_FLAT_INPUT_OFFSET","MD3_MIN_HEIGHT","MD3_INPUT_PADDING_HORIZONTAL","MD3_ADORNMENT_OFFSET","MD3_OUTLINED_INPUT_OFFSET","MD2_AFFIX_OFFSET","MD2_ICON_OFFSET","MD2_LABEL_PADDING_TOP","MD2_LABEL_PADDING_HORIZONTAL","MD2_FLAT_INPUT_OFFSET","MD2_MIN_HEIGHT","MD2_INPUT_PADDING_HORIZONTAL","MD2_ADORNMENT_OFFSET","MD2_OUTLINED_INPUT_OFFSET"],"sources":["helpers.tsx"],"sourcesContent":["import type { Animated } from 'react-native';\n\nimport color from 'color';\n\nimport { MD3LightTheme } from '../../styles/themes';\nimport type { InternalTheme } from '../../types';\nimport { AdornmentSide, AdornmentType } from './Adornment/enums';\nimport type { AdornmentConfig } from './Adornment/types';\nimport {\n  ADORNMENT_SIZE,\n  MD2_ADORNMENT_OFFSET,\n  MD2_AFFIX_OFFSET,\n  MD2_FLAT_INPUT_OFFSET,\n  MD2_ICON_OFFSET,\n  MD2_INPUT_PADDING_HORIZONTAL,\n  MD2_LABEL_PADDING_HORIZONTAL,\n  MD2_LABEL_PADDING_TOP,\n  MD2_MIN_HEIGHT,\n  MD2_OUTLINED_INPUT_OFFSET,\n  MD3_ADORNMENT_OFFSET,\n  MD3_AFFIX_OFFSET,\n  MD3_FLAT_INPUT_OFFSET,\n  MD3_ICON_OFFSET,\n  MD3_INPUT_PADDING_HORIZONTAL,\n  MD3_LABEL_PADDING_HORIZONTAL,\n  MD3_LABEL_PADDING_TOP,\n  MD3_MIN_HEIGHT,\n  MD3_OUTLINED_INPUT_OFFSET,\n} from './constants';\nimport type { TextInputLabelProp } from './types';\n\ntype PaddingProps = {\n  height: number | null;\n  labelHalfHeight: number;\n  multiline: boolean | null;\n  dense: boolean | null;\n  topPosition: number;\n  fontSize: number;\n  lineHeight?: number;\n  label?: TextInputLabelProp | null;\n  scale: number;\n  offset: number;\n  isAndroid: boolean;\n  styles: { paddingTop: number; paddingBottom: number };\n};\n\ntype AdjProps = PaddingProps & {\n  pad: number;\n};\n\nexport type Padding = { paddingTop: number; paddingBottom: number };\n\nexport const calculateLabelTopPosition = (\n  labelHeight: number,\n  height: number = 0,\n  optionalPadding: number = 0\n): number => {\n  const customHeight = height > 0 ? height : 0;\n\n  return Math.floor((customHeight - labelHeight) / 2 + optionalPadding);\n};\n\nexport const calculateInputHeight = (\n  labelHeight: number,\n  height: any = 0,\n  minHeight: number\n): number => {\n  const finalHeight = height > 0 ? height : labelHeight;\n\n  if (height > 0) return height;\n  return finalHeight < minHeight ? minHeight : finalHeight;\n};\n\nexport const calculatePadding = (props: PaddingProps): number => {\n  const { height, multiline = false } = props;\n\n  let result = 0;\n\n  if (multiline) {\n    if (height && multiline) {\n      result = calculateTextAreaPadding(props);\n    } else {\n      result = calculateInputPadding(props);\n    }\n  }\n\n  return Math.max(0, result);\n};\n\nconst calculateTextAreaPadding = (props: PaddingProps) => {\n  const { dense } = props;\n\n  return dense ? 10 : 20;\n};\n\nconst calculateInputPadding = ({\n  topPosition,\n  fontSize,\n  multiline,\n  scale,\n  dense,\n  offset,\n  isAndroid,\n}: PaddingProps): number => {\n  const refFontSize = scale * fontSize;\n  let result = Math.floor(topPosition / 2);\n\n  result =\n    result +\n    Math.floor((refFontSize - fontSize) / 2) -\n    (scale < 1 ? offset / 2 : 0);\n\n  if (multiline && isAndroid)\n    result = Math.min(dense ? offset / 2 : offset, result);\n\n  return result;\n};\n\nexport const adjustPaddingOut = ({\n  pad,\n  multiline,\n  label,\n  scale,\n  height,\n  fontSize,\n  lineHeight,\n  dense,\n  offset,\n  isAndroid,\n}: AdjProps): Padding => {\n  const fontHeight = lineHeight ?? fontSize;\n  const refFontHeight = scale * fontSize;\n  let result = pad;\n\n  if (height && !multiline) {\n    return {\n      paddingTop: Math.max(0, (height - fontHeight) / 2),\n      paddingBottom: Math.max(0, (height - fontHeight) / 2),\n    };\n  }\n  if (!isAndroid && multiline) {\n    if (dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, (refFontHeight / 2) * scale) : 0;\n      } else {\n        result += 0;\n      }\n    }\n    if (!dense) {\n      if (label) {\n        result +=\n          scale < 1\n            ? Math.min(offset, refFontHeight * scale)\n            : Math.min(offset / 2, refFontHeight * scale);\n      } else {\n        result += scale < 1 ? Math.min(offset / 2, refFontHeight * scale) : 0;\n      }\n    }\n    result = Math.floor(result);\n  }\n  return { paddingTop: result, paddingBottom: result };\n};\n\nexport const adjustPaddingFlat = ({\n  pad,\n  scale,\n  multiline,\n  label,\n  height,\n  offset,\n  dense,\n  fontSize,\n  isAndroid,\n  styles,\n}: AdjProps): Padding => {\n  let result = pad;\n  let topResult = result;\n  let bottomResult = result;\n  const { paddingTop, paddingBottom } = styles;\n  const refFontSize = scale * fontSize;\n\n  if (!multiline) {\n    // do not modify padding if input is not multiline\n    if (label) {\n      // return const style for flat input with label\n      return { paddingTop, paddingBottom };\n    }\n    // return pad for flat input without label\n    return { paddingTop: result, paddingBottom: result };\n  }\n\n  if (label) {\n    // add paddings passed from styles\n    topResult = paddingTop;\n    bottomResult = paddingBottom;\n\n    // adjust top padding for iOS\n    if (!isAndroid) {\n      if (dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(result, refFontSize * scale) - result / 2\n            : Math.min(result, refFontSize * scale) - result / 2;\n      }\n      if (!dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(offset / 2, refFontSize * scale)\n            : Math.min(result, refFontSize * scale) - offset / 2;\n      }\n    }\n    topResult = Math.floor(topResult);\n  } else {\n    if (height) {\n      // center text when height is passed\n      return {\n        paddingTop: Math.max(0, (height - fontSize) / 2),\n        paddingBottom: Math.max(0, (height - fontSize) / 2),\n      };\n    }\n    // adjust paddings for iOS if no label\n    if (!isAndroid) {\n      if (dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset / 2, (fontSize / 2) * scale)\n            : Math.min(offset / 2, scale);\n      }\n      if (!dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset, fontSize * scale)\n            : Math.min(fontSize, (offset / 2) * scale);\n      }\n\n      result = Math.floor(result);\n      topResult = result;\n      bottomResult = result;\n    }\n  }\n\n  return {\n    paddingTop: Math.max(0, topResult),\n    paddingBottom: Math.max(0, bottomResult),\n  };\n};\n\nexport const interpolatePlaceholder = (\n  labeled: Animated.Value,\n  hasActiveOutline: boolean | undefined\n) =>\n  labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasActiveOutline ? 0 : 1, 1],\n  });\n\nexport function calculateFlatAffixTopPosition({\n  height,\n  paddingTop,\n  paddingBottom,\n  affixHeight,\n}: {\n  height: number;\n  paddingTop: number;\n  paddingBottom: number;\n  affixHeight: number;\n}): number {\n  const inputHeightWithoutPadding = height - paddingTop - paddingBottom;\n\n  const halfOfTheInputHeightDecreasedByAffixHeight =\n    (inputHeightWithoutPadding - affixHeight) / 2;\n\n  return paddingTop + halfOfTheInputHeightDecreasedByAffixHeight;\n}\n\nexport function calculateOutlinedIconAndAffixTopPosition({\n  height,\n  affixHeight,\n  labelYOffset,\n}: {\n  height: number;\n  affixHeight: number;\n  labelYOffset: number;\n}): number {\n  return (height - affixHeight + labelYOffset) / 2;\n}\n\nexport const calculateFlatInputHorizontalPadding = ({\n  adornmentConfig,\n  isV3,\n}: {\n  adornmentConfig: AdornmentConfig[];\n  isV3?: boolean;\n}) => {\n  const { LABEL_PADDING_HORIZONTAL, ADORNMENT_OFFSET, FLAT_INPUT_OFFSET } =\n    getConstants(isV3);\n\n  let paddingLeft = LABEL_PADDING_HORIZONTAL;\n  let paddingRight = LABEL_PADDING_HORIZONTAL;\n\n  adornmentConfig.forEach(({ type, side }) => {\n    if (type === AdornmentType.Icon && side === AdornmentSide.Left) {\n      paddingLeft = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n    } else if (side === AdornmentSide.Right) {\n      if (type === AdornmentType.Affix) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      } else if (type === AdornmentType.Icon) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      }\n    }\n  });\n\n  return { paddingLeft, paddingRight };\n};\n\ntype BaseProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n};\n\ntype Mode = 'flat' | 'outlined';\n\nconst getInputTextColor = ({\n  theme,\n  textColor,\n  disabled,\n  mode,\n}: BaseProps & { mode: Mode; textColor?: string }) => {\n  const isFlat = mode === 'flat';\n  if (textColor) {\n    return textColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isFlat) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSurface;\n  }\n\n  if (disabled) {\n    return color(theme.colors.text).alpha(0.54).rgb().string();\n  }\n\n  return theme.colors.text;\n};\n\nconst getActiveColor = ({\n  theme,\n  disabled,\n  error,\n  activeUnderlineColor,\n  activeOutlineColor,\n  mode,\n}: BaseProps & {\n  error?: boolean;\n  activeUnderlineColor?: string;\n  activeOutlineColor?: string;\n  mode?: Mode;\n}) => {\n  const isFlat = mode === 'flat';\n  const modeColor = isFlat ? activeUnderlineColor : activeOutlineColor;\n\n  if (error) {\n    return theme.colors.error;\n  }\n\n  if (modeColor) {\n    return modeColor;\n  }\n\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return color(theme.colors.text).alpha(0.54).rgb().string();\n  }\n\n  return theme.colors.primary;\n};\n\nconst getPlaceholderColor = ({ theme, disabled }: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  return theme.colors.placeholder;\n};\n\nconst getFlatBackgroundColor = ({ theme, disabled }: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      // @ts-ignore According to Figma for both themes the base color for disabled in `onSecondaryContainer`\n      return color(MD3LightTheme.colors.onSecondaryContainer)\n        .alpha(0.08)\n        .rgb()\n        .string();\n    } else {\n      return theme.colors.surfaceVariant;\n    }\n  }\n\n  if (disabled) {\n    return undefined;\n  }\n\n  return theme.dark\n    ? color(theme.colors?.background).lighten(0.24).rgb().string()\n    : color(theme.colors?.background).darken(0.06).rgb().string();\n};\n\nconst getFlatUnderlineColor = ({\n  theme,\n  disabled,\n  underlineColor,\n}: BaseProps & { underlineColor?: string }) => {\n  if (!disabled && underlineColor) {\n    return underlineColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.onSurface;\n  }\n\n  if (disabled) {\n    return 'transparent';\n  }\n\n  return theme.colors.disabled;\n};\n\nconst getOutlinedOutlineInputColor = ({\n  theme,\n  disabled,\n  customOutlineColor,\n}: BaseProps & { customOutlineColor?: string }) => {\n  const isTransparent = color(customOutlineColor).alpha() === 0;\n\n  if (!disabled && customOutlineColor) {\n    return customOutlineColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (theme.dark) {\n        return 'transparent';\n      }\n      return theme.colors.surfaceDisabled;\n    }\n\n    return theme.colors.outline;\n  }\n\n  if (disabled) {\n    if (isTransparent) {\n      return customOutlineColor;\n    }\n    return theme.colors.disabled;\n  }\n  return theme.colors.placeholder;\n};\n\nexport const getFlatInputColors = ({\n  underlineColor,\n  activeUnderlineColor,\n  textColor,\n  disabled,\n  error,\n  theme,\n}: {\n  underlineColor?: string;\n  activeUnderlineColor?: string;\n  textColor?: string;\n  disabled?: boolean;\n  error?: boolean;\n  theme: InternalTheme;\n}) => {\n  const baseFlatColorProps = { theme, disabled };\n  return {\n    inputTextColor: getInputTextColor({\n      ...baseFlatColorProps,\n      textColor,\n      mode: 'flat',\n    }),\n    activeColor: getActiveColor({\n      ...baseFlatColorProps,\n      error,\n      activeUnderlineColor,\n      mode: 'flat',\n    }),\n    underlineColorCustom: getFlatUnderlineColor({\n      ...baseFlatColorProps,\n      underlineColor,\n    }),\n    placeholderColor: getPlaceholderColor(baseFlatColorProps),\n    errorColor: theme.colors.error,\n    backgroundColor: getFlatBackgroundColor(baseFlatColorProps),\n  };\n};\n\nexport const getOutlinedInputColors = ({\n  activeOutlineColor,\n  customOutlineColor,\n  textColor,\n  disabled,\n  error,\n  theme,\n}: {\n  activeOutlineColor?: string;\n  customOutlineColor?: string;\n  textColor?: string;\n  disabled?: boolean;\n  error?: boolean;\n  theme: InternalTheme;\n}) => {\n  const baseOutlinedColorProps = { theme, disabled };\n\n  return {\n    inputTextColor: getInputTextColor({\n      ...baseOutlinedColorProps,\n      textColor,\n      mode: 'outlined',\n    }),\n    activeColor: getActiveColor({\n      ...baseOutlinedColorProps,\n      error,\n      activeOutlineColor,\n      mode: 'outlined',\n    }),\n    outlineColor: getOutlinedOutlineInputColor({\n      ...baseOutlinedColorProps,\n      customOutlineColor,\n    }),\n    placeholderColor: getPlaceholderColor(baseOutlinedColorProps),\n    errorColor: theme.colors.error,\n  };\n};\n\nexport const getConstants = (isV3?: boolean) => {\n  // Text input affix\n  let AFFIX_OFFSET;\n  // Text input icon\n  let ICON_OFFSET;\n  //Text input flat\n  let LABEL_PADDING_TOP;\n  let LABEL_PADDING_HORIZONTAL;\n  let FLAT_INPUT_OFFSET;\n  let MIN_HEIGHT;\n  // Text input outlined;\n  let INPUT_PADDING_HORIZONTAL;\n  let ADORNMENT_OFFSET;\n  let OUTLINED_INPUT_OFFSET;\n\n  if (isV3) {\n    AFFIX_OFFSET = MD3_AFFIX_OFFSET;\n    ICON_OFFSET = MD3_ICON_OFFSET;\n    LABEL_PADDING_TOP = MD3_LABEL_PADDING_TOP;\n    LABEL_PADDING_HORIZONTAL = MD3_LABEL_PADDING_HORIZONTAL;\n    FLAT_INPUT_OFFSET = MD3_FLAT_INPUT_OFFSET;\n    MIN_HEIGHT = MD3_MIN_HEIGHT;\n    INPUT_PADDING_HORIZONTAL = MD3_INPUT_PADDING_HORIZONTAL;\n    ADORNMENT_OFFSET = MD3_ADORNMENT_OFFSET;\n    OUTLINED_INPUT_OFFSET = MD3_OUTLINED_INPUT_OFFSET;\n  } else {\n    AFFIX_OFFSET = MD2_AFFIX_OFFSET;\n    ICON_OFFSET = MD2_ICON_OFFSET;\n    LABEL_PADDING_TOP = MD2_LABEL_PADDING_TOP;\n    LABEL_PADDING_HORIZONTAL = MD2_LABEL_PADDING_HORIZONTAL;\n    FLAT_INPUT_OFFSET = MD2_FLAT_INPUT_OFFSET;\n    MIN_HEIGHT = MD2_MIN_HEIGHT;\n    INPUT_PADDING_HORIZONTAL = MD2_INPUT_PADDING_HORIZONTAL;\n    ADORNMENT_OFFSET = MD2_ADORNMENT_OFFSET;\n    OUTLINED_INPUT_OFFSET = MD2_OUTLINED_INPUT_OFFSET;\n  }\n\n  return {\n    AFFIX_OFFSET,\n    ICON_OFFSET,\n    LABEL_PADDING_TOP,\n    LABEL_PADDING_HORIZONTAL,\n    FLAT_INPUT_OFFSET,\n    MIN_HEIGHT,\n    INPUT_PADDING_HORIZONTAL,\n    ADORNMENT_OFFSET,\n    OUTLINED_INPUT_OFFSET,\n  };\n};\n"],"mappings":"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"}