{"version":3,"names":["TouchableRipple","style","background","_background","borderless","disabled","disabledProp","rippleColor","underlayColor","_underlayColor","children","theme","rest","handlePressIn","e","centered","onPressIn","calculatedRippleColor","getTouchableRippleColors","button","currentTarget","window","getComputedStyle","dimensions","getBoundingClientRect","touchX","touchY","changedTouches","touches","nativeEvent","touch","width","height","locationX","pageX","locationY","pageY","size","Math","min","max","container","document","createElement","setAttribute","Object","assign","position","pointerEvents","top","left","right","bottom","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","overflow","ripple","backgroundColor","borderRadius","transitionProperty","transitionDuration","transitionTimingFunction","transformOrigin","transform","opacity","appendChild","requestAnimationFrame","handlePressOut","onPressOut","containers","querySelectorAll","forEach","firstChild","setTimeout","parentNode","removeChild","onPress","styles","touchable","React","Children","only","supported","StyleSheet","create","Platform","OS","cursor","withInternalTheme"],"sources":["TouchableRipple.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  Platform,\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n} from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport { getTouchableRippleColors } from './utils';\n\nexport type Props = React.ComponentPropsWithRef<typeof Pressable> & {\n  /**\n   * Whether to render the ripple outside the view bounds.\n   */\n  borderless?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: Object;\n  /**\n   * Whether to start the ripple at the center (Web).\n   */\n  centered?: boolean;\n  /**\n   * Whether to prevent interaction with the touchable.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press. If not set, will cause the touchable to be disabled.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Color of the ripple effect (Android >= 5.0 and Web).\n   */\n  rippleColor?: string;\n  /**\n   * Color of the underlay for the highlight effect (Android < 5.0 and iOS).\n   */\n  underlayColor?: string;\n  /**\n   * Content of the `TouchableRipple`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\n/**\n * A wrapper for views that should respond to touches.\n * Provides a material \"ink ripple\" interaction effect for supported platforms (>= Android Lollipop).\n * On unsupported platforms, it falls back to a highlight effect.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/touchable-ripple.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Text, TouchableRipple } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <TouchableRipple\n *     onPress={() => console.log('Pressed')}\n *     rippleColor=\"rgba(0, 0, 0, .32)\"\n *   >\n *     <Text>Press anywhere</Text>\n *   </TouchableRipple>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Pressable props https://reactnative.dev/docs/Pressable#props\n */\nconst TouchableRipple = ({\n  style,\n  background: _background,\n  borderless = false,\n  disabled: disabledProp,\n  rippleColor,\n  underlayColor: _underlayColor,\n  children,\n  theme,\n  ...rest\n}: Props) => {\n  const handlePressIn = (e: any) => {\n    const { centered, onPressIn } = rest;\n\n    onPressIn?.(e);\n\n    const { calculatedRippleColor } = getTouchableRippleColors({\n      theme,\n      rippleColor,\n    });\n\n    const button = e.currentTarget;\n    const style = window.getComputedStyle(button);\n    const dimensions = button.getBoundingClientRect();\n\n    let touchX;\n    let touchY;\n\n    const { changedTouches, touches } = e.nativeEvent;\n    const touch = touches?.[0] ?? changedTouches?.[0];\n\n    // If centered or it was pressed using keyboard - enter or space\n    if (centered || !touch) {\n      touchX = dimensions.width / 2;\n      touchY = dimensions.height / 2;\n    } else {\n      touchX = touch.locationX ?? e.pageX;\n      touchY = touch.locationY ?? e.pageY;\n    }\n\n    // Get the size of the button to determine how big the ripple should be\n    const size = centered\n      ? // If ripple is always centered, we don't need to make it too big\n        Math.min(dimensions.width, dimensions.height) * 1.25\n      : // Otherwise make it twice as big so clicking on one end spreads ripple to other\n        Math.max(dimensions.width, dimensions.height) * 2;\n\n    // Create a container for our ripple effect so we don't need to change the parent's style\n    const container = document.createElement('span');\n\n    container.setAttribute('data-paper-ripple', '');\n\n    Object.assign(container.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      borderTopLeftRadius: style.borderTopLeftRadius,\n      borderTopRightRadius: style.borderTopRightRadius,\n      borderBottomRightRadius: style.borderBottomRightRadius,\n      borderBottomLeftRadius: style.borderBottomLeftRadius,\n      overflow: centered ? 'visible' : 'hidden',\n    });\n\n    // Create span to show the ripple effect\n    const ripple = document.createElement('span');\n\n    Object.assign(ripple.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      backgroundColor: calculatedRippleColor,\n      borderRadius: '50%',\n\n      /* Transition configuration */\n      transitionProperty: 'transform opacity',\n      transitionDuration: `${Math.min(size * 1.5, 350)}ms`,\n      transitionTimingFunction: 'linear',\n      transformOrigin: 'center',\n\n      /* We'll animate these properties */\n      transform: 'translate3d(-50%, -50%, 0) scale3d(0.1, 0.1, 0.1)',\n      opacity: '0.5',\n\n      // Position the ripple where cursor was\n      left: `${touchX}px`,\n      top: `${touchY}px`,\n      width: `${size}px`,\n      height: `${size}px`,\n    });\n\n    // Finally, append it to DOM\n    container.appendChild(ripple);\n    button.appendChild(container);\n\n    // rAF runs in the same frame as the event handler\n    // Use double rAF to ensure the transition class is added in next frame\n    // This will make sure that the transition animation is triggered\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        Object.assign(ripple.style, {\n          transform: 'translate3d(-50%, -50%, 0) scale3d(1, 1, 1)',\n          opacity: '1',\n        });\n      });\n    });\n  };\n\n  const handlePressOut = (e: any) => {\n    rest.onPressOut?.(e);\n\n    const containers = e.currentTarget.querySelectorAll(\n      '[data-paper-ripple]'\n    ) as HTMLElement[];\n\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        containers.forEach((container) => {\n          const ripple = container.firstChild as HTMLSpanElement;\n\n          Object.assign(ripple.style, {\n            transitionDuration: '250ms',\n            opacity: 0,\n          });\n\n          // Finally remove the span after the transition\n          setTimeout(() => {\n            const { parentNode } = container;\n\n            if (parentNode) {\n              parentNode.removeChild(container);\n            }\n          }, 500);\n        });\n      });\n    });\n  };\n\n  const disabled = disabledProp || !rest.onPress;\n\n  return (\n    <Pressable\n      {...rest}\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n      disabled={disabled}\n      style={[styles.touchable, borderless && styles.borderless, style]}\n    >\n      {React.Children.only(children)}\n    </Pressable>\n  );\n};\n\n/**\n * Whether ripple effect is supported.\n */\nTouchableRipple.supported = true;\n\nconst styles = StyleSheet.create({\n  touchable: {\n    position: 'relative',\n    ...(Platform.OS === 'web' && { cursor: 'pointer' }),\n  },\n  borderless: {\n    overflow: 'hidden',\n  },\n});\n\nexport default withInternalTheme(TouchableRipple);\n"],"mappings":"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"}