{"version":3,"names":["ANDROID_VERSION_LOLLIPOP","ANDROID_VERSION_PIE","TouchableRipple","style","background","borderless","disabled","disabledProp","rippleColor","underlayColor","children","theme","rest","showUnderlay","setShowUnderlay","React","useState","onPress","calculatedRippleColor","calculatedUnderlayColor","getTouchableRippleColors","useForeground","Platform","OS","Version","handlePressIn","e","onPressIn","handlePressOut","onPressOut","supported","styles","overflowHidden","color","foreground","Children","only","backgroundColor","StyleSheet","create","overflow","withInternalTheme"],"sources":["TouchableRipple.native.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  PressableAndroidRippleConfig,\n  StyleProp,\n  Platform,\n  ViewStyle,\n  StyleSheet,\n  Pressable,\n  GestureResponderEvent,\n} from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport { getTouchableRippleColors } from './utils';\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\nconst ANDROID_VERSION_PIE = 28;\n\ntype Props = React.ComponentProps<typeof Pressable> & {\n  borderless?: boolean;\n  background?: PressableAndroidRippleConfig;\n  disabled?: boolean;\n  onPress?: () => void | null;\n  rippleColor?: string;\n  underlayColor?: string;\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  theme: InternalTheme;\n};\n\nconst TouchableRipple = ({\n  style,\n  background,\n  borderless = false,\n  disabled: disabledProp,\n  rippleColor,\n  underlayColor,\n  children,\n  theme,\n  ...rest\n}: Props) => {\n  const [showUnderlay, setShowUnderlay] = React.useState<boolean>(false);\n\n  const disabled = disabledProp || !rest.onPress;\n  const { calculatedRippleColor, calculatedUnderlayColor } =\n    getTouchableRippleColors({\n      theme,\n      rippleColor,\n      underlayColor,\n    });\n\n  // A workaround for ripple on Android P is to use useForeground + overflow: 'hidden'\n  // https://github.com/facebook/react-native/issues/6480\n  const useForeground =\n    Platform.OS === 'android' &&\n    Platform.Version >= ANDROID_VERSION_PIE &&\n    borderless;\n\n  const handlePressIn = (e: GestureResponderEvent) => {\n    setShowUnderlay(true);\n    rest.onPressIn?.(e);\n  };\n\n  const handlePressOut = (e: GestureResponderEvent) => {\n    setShowUnderlay(false);\n    rest.onPressOut?.(e);\n  };\n\n  if (TouchableRipple.supported) {\n    return (\n      <Pressable\n        {...rest}\n        disabled={disabled}\n        style={[borderless && styles.overflowHidden, style]}\n        android_ripple={\n          background != null\n            ? background\n            : {\n                color: calculatedRippleColor,\n                borderless,\n                foreground: useForeground,\n              }\n        }\n      >\n        {React.Children.only(children)}\n      </Pressable>\n    );\n  }\n\n  return (\n    <Pressable\n      {...rest}\n      disabled={disabled}\n      style={[\n        borderless && styles.overflowHidden,\n        showUnderlay && { backgroundColor: calculatedUnderlayColor },\n        style,\n      ]}\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n    >\n      {React.Children.only(children)}\n    </Pressable>\n  );\n};\n\nTouchableRipple.supported =\n  Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP;\n\nconst styles = StyleSheet.create({\n  overflowHidden: {\n    overflow: 'hidden',\n  },\n});\n\nexport default withInternalTheme(TouchableRipple);\n"],"mappings":";;;;;;;AAAA;;AACA;;AAUA;;AAEA;;;;;;;;AAEA,MAAMA,wBAAwB,GAAG,EAAjC;AACA,MAAMC,mBAAmB,GAAG,EAA5B;;AAcA,MAAMC,eAAe,GAAG,QAUX;EAAA,IAVY;IACvBC,KADuB;IAEvBC,UAFuB;IAGvBC,UAAU,GAAG,KAHU;IAIvBC,QAAQ,EAAEC,YAJa;IAKvBC,WALuB;IAMvBC,aANuB;IAOvBC,QAPuB;IAQvBC,KARuB;IASvB,GAAGC;EAToB,CAUZ;EACX,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCC,KAAK,CAACC,QAAN,CAAwB,KAAxB,CAAxC;EAEA,MAAMV,QAAQ,GAAGC,YAAY,IAAI,CAACK,IAAI,CAACK,OAAvC;EACA,MAAM;IAAEC,qBAAF;IAAyBC;EAAzB,IACJ,IAAAC,+BAAA,EAAyB;IACvBT,KADuB;IAEvBH,WAFuB;IAGvBC;EAHuB,CAAzB,CADF,CAJW,CAWX;EACA;;EACA,MAAMY,aAAa,GACjBC,qBAAA,CAASC,EAAT,KAAgB,SAAhB,IACAD,qBAAA,CAASE,OAAT,IAAoBvB,mBADpB,IAEAI,UAHF;;EAKA,MAAMoB,aAAa,GAAIC,CAAD,IAA8B;IAAA;;IAClDZ,eAAe,CAAC,IAAD,CAAf;IACA,mBAAAF,IAAI,CAACe,SAAL,yEAAAf,IAAI,EAAac,CAAb,CAAJ;EACD,CAHD;;EAKA,MAAME,cAAc,GAAIF,CAAD,IAA8B;IAAA;;IACnDZ,eAAe,CAAC,KAAD,CAAf;IACA,oBAAAF,IAAI,CAACiB,UAAL,2EAAAjB,IAAI,EAAcc,CAAd,CAAJ;EACD,CAHD;;EAKA,IAAIxB,eAAe,CAAC4B,SAApB,EAA+B;IAC7B,oBACE,oBAAC,sBAAD,eACMlB,IADN;MAEE,QAAQ,EAAEN,QAFZ;MAGE,KAAK,EAAE,CAACD,UAAU,IAAI0B,MAAM,CAACC,cAAtB,EAAsC7B,KAAtC,CAHT;MAIE,cAAc,EACZC,UAAU,IAAI,IAAd,GACIA,UADJ,GAEI;QACE6B,KAAK,EAAEf,qBADT;QAEEb,UAFF;QAGE6B,UAAU,EAAEb;MAHd;IAPR,IAcGN,KAAK,CAACoB,QAAN,CAAeC,IAAf,CAAoB1B,QAApB,CAdH,CADF;EAkBD;;EAED,oBACE,oBAAC,sBAAD,eACME,IADN;IAEE,QAAQ,EAAEN,QAFZ;IAGE,KAAK,EAAE,CACLD,UAAU,IAAI0B,MAAM,CAACC,cADhB,EAELnB,YAAY,IAAI;MAAEwB,eAAe,EAAElB;IAAnB,CAFX,EAGLhB,KAHK,CAHT;IAQE,SAAS,EAAEsB,aARb;IASE,UAAU,EAAEG;EATd,IAWGb,KAAK,CAACoB,QAAN,CAAeC,IAAf,CAAoB1B,QAApB,CAXH,CADF;AAeD,CA1ED;;AA4EAR,eAAe,CAAC4B,SAAhB,GACER,qBAAA,CAASC,EAAT,KAAgB,SAAhB,IAA6BD,qBAAA,CAASE,OAAT,IAAoBxB,wBADnD;;AAGA,MAAM+B,MAAM,GAAGO,uBAAA,CAAWC,MAAX,CAAkB;EAC/BP,cAAc,EAAE;IACdQ,QAAQ,EAAE;EADI;AADe,CAAlB,CAAf;;eAMe,IAAAC,0BAAA,EAAkBvC,eAAlB,C"}