{"version":3,"names":["Text","ref","style","variant","theme","initialTheme","rest","root","React","useRef","useInternalTheme","writingDirection","I18nManager","getConstants","isRTL","useImperativeHandle","setNativeProps","args","current","isV3","stylesByVariant","Object","keys","MD3TypescaleKey","reduce","acc","key","fontSize","fontWeight","lineHeight","letterSpacing","fontFamily","fonts","color","colors","onSurface","styleForVariant","styles","text","font","default","regular","textStyle","StyleSheet","create","textAlign","forwardRef"],"sources":["Text.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n  Text as NativeText,\n  TextStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport { Font, MD3TypescaleKey, ThemeProp } from '../../types';\n\nexport type Props = React.ComponentProps<typeof NativeText> & {\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  variant?: keyof typeof MD3TypescaleKey;\n  children: React.ReactNode;\n  theme?: ThemeProp;\n  style?: StyleProp<TextStyle>;\n};\n\n// @component-group Typography\n\n/**\n * Typography component showing styles complied with passed `variant` prop and supported by the type system.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/typography.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <>\n *     <Text variant=\"displayLarge\">Display Large</Text>\n *     <Text variant=\"displayMedium\">Display Medium</Text>\n *     <Text variant=\"displaySmall\">Display small</Text>\n *\n *     <Text variant=\"headlineLarge\">Headline Large</Text>\n *     <Text variant=\"headlineMedium\">Headline Medium</Text>\n *     <Text variant=\"headlineSmall\">Headline Small</Text>\n *\n *     <Text variant=\"titleLarge\">Title Large</Text>\n *     <Text variant=\"titleMedium\">Title Medium</Text>\n *     <Text variant=\"titleSmall\">Title Small</Text>\n *\n *     <Text variant=\"bodyLarge\">Body Large</Text>\n *     <Text variant=\"bodyMedium\">Body Medium</Text>\n *     <Text variant=\"bodySmall\">Body Small</Text>\n *\n *     <Text variant=\"labelLarge\">Label Large</Text>\n *     <Text variant=\"labelMedium\">Label Medium</Text>\n *     <Text variant=\"labelSmall\">Label Small</Text>\n *  </>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\n\nconst Text: React.ForwardRefRenderFunction<{}, Props> = (\n  { style, variant, theme: initialTheme, ...rest }: Props,\n  ref\n) => {\n  const root = React.useRef<NativeText | null>(null);\n  // FIXME: destructure it in TS 4.6+\n  const theme = useInternalTheme(initialTheme);\n  const writingDirection = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr';\n\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n  }));\n\n  if (theme.isV3 && variant) {\n    const stylesByVariant = Object.keys(MD3TypescaleKey).reduce(\n      (acc, key) => {\n        const { fontSize, fontWeight, lineHeight, letterSpacing, fontFamily } =\n          theme.fonts[key as keyof typeof MD3TypescaleKey];\n\n        return {\n          ...acc,\n          [key]: {\n            fontFamily,\n            fontSize,\n            fontWeight,\n            lineHeight,\n            letterSpacing,\n            color: theme.colors.onSurface,\n          },\n        };\n      },\n      {} as {\n        [key in MD3TypescaleKey]: {\n          fontSize: number;\n          fontWeight: Font['fontWeight'];\n          lineHeight: number;\n          letterSpacing: number;\n        };\n      }\n    );\n\n    const styleForVariant = stylesByVariant[variant];\n\n    return (\n      <NativeText\n        ref={root}\n        style={[styleForVariant, styles.text, { writingDirection }, style]}\n        {...rest}\n      />\n    );\n  } else {\n    const font = theme.isV3 ? theme.fonts.default : theme.fonts?.regular;\n    const textStyle = {\n      ...font,\n      color: theme.isV3 ? theme.colors?.onSurface : theme.colors.text,\n    };\n    return (\n      <NativeText\n        {...rest}\n        ref={root}\n        style={[styles.text, textStyle, { writingDirection }, style]}\n      />\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default React.forwardRef(Text);\n"],"mappings":";;;;;;;AAAA;;AACA;;AAQA;;AACA;;;;;;;;AAyBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,IAA+C,GAAG,OAEtDC,GAFsD,KAGnD;EAAA,IAFH;IAAEC,KAAF;IAASC,OAAT;IAAkBC,KAAK,EAAEC,YAAzB;IAAuC,GAAGC;EAA1C,CAEG;EACH,MAAMC,IAAI,GAAGC,KAAK,CAACC,MAAN,CAAgC,IAAhC,CAAb,CADG,CAEH;;EACA,MAAML,KAAK,GAAG,IAAAM,yBAAA,EAAiBL,YAAjB,CAAd;EACA,MAAMM,gBAAgB,GAAGC,wBAAA,CAAYC,YAAZ,GAA2BC,KAA3B,GAAmC,KAAnC,GAA2C,KAApE;EAEAN,KAAK,CAACO,mBAAN,CAA0Bd,GAA1B,EAA+B,OAAO;IACpCe,cAAc,EAAGC,IAAD;MAAA;;MAAA,wBAAkBV,IAAI,CAACW,OAAvB,kDAAkB,cAAcF,cAAd,CAA6BC,IAA7B,CAAlB;IAAA;EADoB,CAAP,CAA/B;;EAIA,IAAIb,KAAK,CAACe,IAAN,IAAchB,OAAlB,EAA2B;IACzB,MAAMiB,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAYC,sBAAZ,EAA6BC,MAA7B,CACtB,CAACC,GAAD,EAAMC,GAAN,KAAc;MACZ,MAAM;QAAEC,QAAF;QAAYC,UAAZ;QAAwBC,UAAxB;QAAoCC,aAApC;QAAmDC;MAAnD,IACJ3B,KAAK,CAAC4B,KAAN,CAAYN,GAAZ,CADF;MAGA,OAAO,EACL,GAAGD,GADE;QAEL,CAACC,GAAD,GAAO;UACLK,UADK;UAELJ,QAFK;UAGLC,UAHK;UAILC,UAJK;UAKLC,aALK;UAMLG,KAAK,EAAE7B,KAAK,CAAC8B,MAAN,CAAaC;QANf;MAFF,CAAP;IAWD,CAhBqB,EAiBtB,EAjBsB,CAAxB;IA2BA,MAAMC,eAAe,GAAGhB,eAAe,CAACjB,OAAD,CAAvC;IAEA,oBACE,oBAAC,iBAAD;MACE,GAAG,EAAEI,IADP;MAEE,KAAK,EAAE,CAAC6B,eAAD,EAAkBC,MAAM,CAACC,IAAzB,EAA+B;QAAE3B;MAAF,CAA/B,EAAqDT,KAArD;IAFT,GAGMI,IAHN,EADF;EAOD,CArCD,MAqCO;IAAA;;IACL,MAAMiC,IAAI,GAAGnC,KAAK,CAACe,IAAN,GAAaf,KAAK,CAAC4B,KAAN,CAAYQ,OAAzB,mBAAmCpC,KAAK,CAAC4B,KAAzC,iDAAmC,aAAaS,OAA7D;IACA,MAAMC,SAAS,GAAG,EAChB,GAAGH,IADa;MAEhBN,KAAK,EAAE7B,KAAK,CAACe,IAAN,oBAAaf,KAAK,CAAC8B,MAAnB,kDAAa,cAAcC,SAA3B,GAAuC/B,KAAK,CAAC8B,MAAN,CAAaI;IAF3C,CAAlB;IAIA,oBACE,oBAAC,iBAAD,eACMhC,IADN;MAEE,GAAG,EAAEC,IAFP;MAGE,KAAK,EAAE,CAAC8B,MAAM,CAACC,IAAR,EAAcI,SAAd,EAAyB;QAAE/B;MAAF,CAAzB,EAA+CT,KAA/C;IAHT,GADF;EAOD;AACF,CAhED;;AAkEA,MAAMmC,MAAM,GAAGM,uBAAA,CAAWC,MAAX,CAAkB;EAC/BN,IAAI,EAAE;IACJO,SAAS,EAAE;EADP;AADyB,CAAlB,CAAf;;4BAMerC,KAAK,CAACsC,UAAN,CAAiB9C,IAAjB,C"}