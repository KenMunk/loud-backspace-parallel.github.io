{"version":3,"names":["React","StyleSheet","View","withInternalTheme","white","getContrastingColor","Icon","defaultSize","Avatar","icon","size","style","theme","rest","backgroundColor","colors","primary","restStyle","flatten","textColor","color","width","height","borderRadius","styles","container","displayName","create","justifyContent","alignItems"],"sources":["AvatarIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport { white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\nimport getContrastingColor from '../../utils/getContrastingColor';\nimport Icon, { IconSource } from '../Icon';\n\nconst defaultSize = 64;\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Icon to display for the `Avatar`.\n   */\n  icon: IconSource;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the icon.\n   */\n  color?: string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Icon size={24} icon=\"folder\" />\n * );\n * ```\n */\nconst Avatar = ({ icon, size = defaultSize, style, theme, ...rest }: Props) => {\n  const { backgroundColor = theme.colors?.primary, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor =\n    rest.color ??\n    getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      <Icon source={icon} color={textColor} size={size * 0.6} />\n    </View>\n  );\n};\n\nAvatar.displayName = 'Avatar.Icon';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withInternalTheme(Avatar);\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAoBC,UAApB,EAAgCC,IAAhC,QAAuD,cAAvD;AAEA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,KAAT,QAAsB,+BAAtB;AAEA,OAAOC,mBAAP,MAAgC,iCAAhC;AACA,OAAOC,IAAP,MAAiC,SAAjC;AAEA,MAAMC,WAAW,GAAG,EAApB;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAG,QAAgE;EAAA;;EAAA,IAA/D;IAAEC,IAAF;IAAQC,IAAI,GAAGH,WAAf;IAA4BI,KAA5B;IAAmCC,KAAnC;IAA0C,GAAGC;EAA7C,CAA+D;EAC7E,MAAM;IAAEC,eAAe,oBAAGF,KAAK,CAACG,MAAT,kDAAG,cAAcC,OAAlC;IAA2C,GAAGC;EAA9C,IACJhB,UAAU,CAACiB,OAAX,CAAmBP,KAAnB,KAA6B,EAD/B;EAEA,MAAMQ,SAAS,kBACbN,IAAI,CAACO,KADQ,qDAEbf,mBAAmB,CAACS,eAAD,EAAkBV,KAAlB,EAAyB,oBAAzB,CAFrB;EAIA,oBACE,oBAAC,IAAD;IACE,KAAK,EAAE,CACL;MACEiB,KAAK,EAAEX,IADT;MAEEY,MAAM,EAAEZ,IAFV;MAGEa,YAAY,EAAEb,IAAI,GAAG,CAHvB;MAIEI;IAJF,CADK,EAOLU,MAAM,CAACC,SAPF,EAQLR,SARK;EADT,GAWMJ,IAXN,gBAaE,oBAAC,IAAD;IAAM,MAAM,EAAEJ,IAAd;IAAoB,KAAK,EAAEU,SAA3B;IAAsC,IAAI,EAAET,IAAI,GAAG;EAAnD,EAbF,CADF;AAiBD,CAxBD;;AA0BAF,MAAM,CAACkB,WAAP,GAAqB,aAArB;AAEA,MAAMF,MAAM,GAAGvB,UAAU,CAAC0B,MAAX,CAAkB;EAC/BF,SAAS,EAAE;IACTG,cAAc,EAAE,QADP;IAETC,UAAU,EAAE;EAFH;AADoB,CAAlB,CAAf;AAOA,eAAe1B,iBAAiB,CAACK,MAAD,CAAhC"}