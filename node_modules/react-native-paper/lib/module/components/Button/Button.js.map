{"version":3,"names":["React","Animated","StyleSheet","View","color","withInternalTheme","ActivityIndicator","Icon","Surface","TouchableRipple","Text","getButtonColors","Button","disabled","compact","mode","dark","loading","icon","buttonColor","customButtonColor","textColor","customTextColor","children","accessibilityLabel","accessibilityHint","onPress","onPressIn","onPressOut","onLongPress","style","theme","uppercase","isV3","contentStyle","labelStyle","testID","accessible","rest","isMode","useCallback","modeToCompare","roundness","animation","isElevationEntitled","initialElevation","activeElevation","current","elevation","useRef","Value","useEffect","setValue","handlePressIn","scale","timing","toValue","duration","useNativeDriver","start","handlePressOut","borderRadius","iconSize","backgroundColor","borderColor","borderWidth","rippleColor","alpha","rgb","string","buttonStyle","touchableStyle","flatten","customLabelColor","fontSize","customLabelSize","font","fonts","labelLarge","medium","textStyle","iconStyle","flexDirection","styles","iconReverse","md3IconReverse","md3IconReverseTextMode","md3Icon","md3IconTextMode","button","content","label","md2Label","md3LabelTextAddons","md3LabelText","md3Label","compactLabel","uppercaseLabel","create","minWidth","borderStyle","alignItems","justifyContent","marginLeft","marginRight","textAlign","marginVertical","marginHorizontal","letterSpacing","textTransform"],"sources":["Button.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport ActivityIndicator from '../ActivityIndicator';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { ButtonMode, getButtonColors } from './utils';\n\nexport type Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Mode of the button. You can change the mode to adjust the styling to give it desired emphasis.\n   * - `text` - flat button without background or outline, used for the lowest priority actions, especially when presenting multiple options.\n   * - `outlined` - button with an outline without background, typically used for important, but not primary action â€“ represents medium emphasis.\n   * - `contained` - button with a background color, used for important action, have the most visual impact and high emphasis.\n   * - `elevated` - button with a background color and elevation, used when absolutely necessary e.g. button requires visual separation from a patterned background. @supported Available in v5.x with theme version 3\n   * - `contained-tonal` - button with a secondary background color, an alternative middle ground between contained and outlined buttons. @supported Available in v5.x with theme version 3\n   */\n  mode?: 'text' | 'outlined' | 'contained' | 'elevated' | 'contained-tonal';\n  /**\n   * Whether the color is a dark color. A dark button will render light text and vice-versa. Only applicable for:\n   *  * `contained` mode for theme version 2\n   *  * `contained`, `contained-tonal` and `elevated` modes for theme version 3.\n   */\n  dark?: boolean;\n  /**\n   * Use a compact look, useful for `text` buttons in a row.\n   */\n  compact?: boolean;\n  /**\n   * @deprecated Deprecated in v5.x - use `buttonColor` or `textColor` instead.\n   * Custom text color for flat button, or background color for contained button.\n   */\n  color?: string;\n  /**\n   * @supported Available in v5.x\n   * Custom button's background color.\n   */\n  buttonColor?: string;\n  /**\n   * @supported Available in v5.x\n   * Custom button's text color.\n   */\n  textColor?: string;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Icon to display for the `Button`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Label text of the button.\n   */\n  children: React.ReactNode;\n  /**\n   * Make the label text uppercased. Note that this won't work if you pass React elements as children.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility hint for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityHint?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * @supported Available in v5.x\n   * Function to execute as soon as the touchable element is pressed and invoked even before onPress.\n   */\n  onPressIn?: () => void;\n  /**\n   * @supported Available in v5.x\n   * Function to execute as soon as the touch is released even before onPress.\n   */\n  onPressOut?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Style of button's inner content.\n   * Use this prop to apply custom height and width and to set the icon on the right with `flexDirection: 'row-reverse'`.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the button text.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * A button is component that the user can press to trigger an action.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/button-1.png\" />\n *     <figcaption>Text button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-2.png\" />\n *     <figcaption>Outlined button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-3.png\" />\n *     <figcaption>Contained button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-4.png\" />\n *     <figcaption>Elevated button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-5.png\" />\n *     <figcaption>Contained-tonal button</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Button icon=\"camera\" mode=\"contained\" onPress={() => console.log('Pressed')}>\n *     Press me\n *   </Button>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Button = ({\n  disabled,\n  compact,\n  mode = 'text',\n  dark,\n  loading,\n  icon,\n  buttonColor: customButtonColor,\n  textColor: customTextColor,\n  children,\n  accessibilityLabel,\n  accessibilityHint,\n  onPress,\n  onPressIn,\n  onPressOut,\n  onLongPress,\n  style,\n  theme,\n  uppercase = !theme.isV3,\n  contentStyle,\n  labelStyle,\n  testID,\n  accessible,\n  ...rest\n}: Props) => {\n  const isMode = React.useCallback(\n    (modeToCompare: ButtonMode) => {\n      return mode === modeToCompare;\n    },\n    [mode]\n  );\n  const { roundness, isV3, animation } = theme;\n\n  const isElevationEntitled =\n    !disabled && (isV3 ? isMode('elevated') : isMode('contained'));\n  const initialElevation = isV3 ? 1 : 2;\n  const activeElevation = isV3 ? 2 : 8;\n\n  const { current: elevation } = React.useRef<Animated.Value>(\n    new Animated.Value(isElevationEntitled ? initialElevation : 0)\n  );\n\n  React.useEffect(() => {\n    elevation.setValue(isElevationEntitled ? initialElevation : 0);\n  }, [isElevationEntitled, elevation, initialElevation]);\n\n  const handlePressIn = () => {\n    onPressIn?.();\n    if (isV3 ? isMode('elevated') : isMode('contained')) {\n      const { scale } = animation;\n      Animated.timing(elevation, {\n        toValue: activeElevation,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  };\n\n  const handlePressOut = () => {\n    onPressOut?.();\n    if (isV3 ? isMode('elevated') : isMode('contained')) {\n      const { scale } = animation;\n      Animated.timing(elevation, {\n        toValue: initialElevation,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  };\n\n  const borderRadius = (isV3 ? 5 : 1) * roundness;\n  const iconSize = isV3 ? 18 : 16;\n\n  const { backgroundColor, borderColor, textColor, borderWidth } =\n    getButtonColors({\n      customButtonColor,\n      customTextColor,\n      theme,\n      mode,\n      disabled,\n      dark,\n    });\n\n  const rippleColor = color(textColor).alpha(0.12).rgb().string();\n\n  const buttonStyle = {\n    backgroundColor,\n    borderColor,\n    borderWidth,\n    borderRadius,\n  };\n  const touchableStyle = {\n    borderRadius: style\n      ? ((StyleSheet.flatten(style) || {}) as ViewStyle).borderRadius ??\n        borderRadius\n      : borderRadius,\n  };\n\n  const { color: customLabelColor, fontSize: customLabelSize } =\n    StyleSheet.flatten(labelStyle) || {};\n\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n  const textStyle = {\n    color: textColor,\n    ...font,\n  };\n\n  const iconStyle =\n    StyleSheet.flatten(contentStyle)?.flexDirection === 'row-reverse'\n      ? [\n          styles.iconReverse,\n          isV3 && styles.md3IconReverse,\n          isV3 && isMode('text') && styles.md3IconReverseTextMode,\n        ]\n      : [\n          styles.icon,\n          isV3 && styles.md3Icon,\n          isV3 && isMode('text') && styles.md3IconTextMode,\n        ];\n\n  return (\n    <Surface\n      {...rest}\n      style={\n        [\n          styles.button,\n          compact && styles.compact,\n          buttonStyle,\n          style,\n          !isV3 && { elevation },\n        ] as ViewStyle\n      }\n      {...(isV3 && { elevation: elevation })}\n    >\n      <TouchableRipple\n        borderless\n        onPress={onPress}\n        onLongPress={onLongPress}\n        onPressIn={handlePressIn}\n        onPressOut={handlePressOut}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityHint={accessibilityHint}\n        accessibilityRole=\"button\"\n        accessibilityState={{ disabled }}\n        accessible={accessible}\n        disabled={disabled}\n        rippleColor={rippleColor}\n        style={touchableStyle}\n        testID={testID}\n      >\n        <View style={[styles.content, contentStyle]}>\n          {icon && loading !== true ? (\n            <View style={iconStyle}>\n              <Icon\n                source={icon}\n                size={customLabelSize ?? iconSize}\n                color={\n                  typeof customLabelColor === 'string'\n                    ? customLabelColor\n                    : textColor\n                }\n              />\n            </View>\n          ) : null}\n          {loading ? (\n            <ActivityIndicator\n              size={customLabelSize ?? iconSize}\n              color={\n                typeof customLabelColor === 'string'\n                  ? customLabelColor\n                  : textColor\n              }\n              style={iconStyle}\n            />\n          ) : null}\n          <Text\n            variant=\"labelLarge\"\n            selectable={false}\n            numberOfLines={1}\n            style={[\n              styles.label,\n              !isV3 && styles.md2Label,\n              isV3 &&\n                (isMode('text')\n                  ? icon || loading\n                    ? styles.md3LabelTextAddons\n                    : styles.md3LabelText\n                  : styles.md3Label),\n              compact && styles.compactLabel,\n              uppercase && styles.uppercaseLabel,\n              textStyle,\n              labelStyle,\n            ]}\n          >\n            {children}\n          </Text>\n        </View>\n      </TouchableRipple>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    minWidth: 64,\n    borderStyle: 'solid',\n  },\n  compact: {\n    minWidth: 'auto',\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    marginLeft: 12,\n    marginRight: -4,\n  },\n  iconReverse: {\n    marginRight: 12,\n    marginLeft: -4,\n  },\n  md3Icon: {\n    marginLeft: 16,\n    marginRight: -16,\n  },\n  md3IconReverse: {\n    marginLeft: -16,\n    marginRight: 16,\n  },\n  md3IconTextMode: {\n    marginLeft: 12,\n    marginRight: -8,\n  },\n  md3IconReverseTextMode: {\n    marginLeft: -8,\n    marginRight: 12,\n  },\n  label: {\n    textAlign: 'center',\n    marginVertical: 9,\n    marginHorizontal: 16,\n  },\n  md2Label: {\n    letterSpacing: 1,\n  },\n  compactLabel: {\n    marginHorizontal: 8,\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  md3Label: {\n    marginVertical: 10,\n    marginHorizontal: 24,\n  },\n  md3LabelText: {\n    marginHorizontal: 12,\n  },\n  md3LabelTextAddons: {\n    marginHorizontal: 16,\n  },\n});\n\nexport default withInternalTheme(Button);\n"],"mappings":"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"}