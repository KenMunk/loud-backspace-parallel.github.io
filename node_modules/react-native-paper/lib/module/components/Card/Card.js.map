{"version":3,"names":["React","Animated","StyleSheet","TouchableWithoutFeedback","View","withInternalTheme","Surface","CardActions","CardContent","CardCover","CardTitle","getCardColors","Card","elevation","cardElevation","onLongPress","onPress","mode","cardMode","children","style","theme","testID","accessible","rest","isMode","useCallback","modeToCompare","current","useRef","Value","elevationDarkAdaptive","animation","dark","roundness","isV3","prevDarkRef","useEffect","prevDark","isAdaptiveMode","animationDuration","scale","setValue","runElevationAnimation","pressType","isPressTypeIn","timing","toValue","duration","useNativeDriver","start","handlePressIn","handlePressOut","total","Children","count","siblings","map","child","isValidElement","type","displayName","computedElevation","backgroundColor","borderColor","borderRadius","styles","resetElevation","outline","undefined","innerContainer","index","cloneElement","Content","Actions","Cover","Title","create","flexGrow","flexShrink","borderWidth","position","width","height","zIndex"],"sources":["Card.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport Surface from '../Surface';\nimport CardActions from './CardActions';\nimport CardContent from './CardContent';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardCover from './CardCover';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardTitle from './CardTitle';\nimport { getCardColors } from './utils';\n\ntype OutlinedCardProps = {\n  mode: 'outlined';\n  elevation?: never;\n};\n\ntype ElevatedCardProps = {\n  mode?: 'elevated';\n  elevation?: number;\n};\n\ntype ContainedCardProps = {\n  mode?: 'contained';\n  elevation?: never;\n};\n\ntype HandlePressType = 'in' | 'out';\n\ntype Mode = 'elevated' | 'outlined' | 'contained';\n\nexport type Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Changes Card shadow and background on iOS and Android.\n   */\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Mode of the Card.\n   * - `elevated` - Card with elevation.\n   * - `contained` - Card with without outline and elevation @supported Available in v5.x with theme version 3\n   * - `outlined` - Card with an outline.\n   */\n  mode?: Mode;\n  /**\n   * Content of the `Card`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * Pass down testID from card props to touchable\n   */\n  testID?: string;\n  /**\n   * Pass down accessible from card props to touchable\n   */\n  accessible?: boolean;\n};\n\n/**\n * A card is a sheet of material that serves as an entry point to more detailed information.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/card-1.png\" />\n *     <figcaption>Elevated card</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/card-2.png\" />\n *     <figcaption>Outlined card</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/card-3.png\" />\n *     <figcaption>Contained card</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\n *\n * const LeftContent = props => <Avatar.Icon {...props} icon=\"folder\" />\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Title title=\"Card Title\" subtitle=\"Card Subtitle\" left={LeftContent} />\n *     <Card.Content>\n *       <Title>Card title</Title>\n *       <Paragraph>Card content</Paragraph>\n *     </Card.Content>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *     <Card.Actions>\n *       <Button>Cancel</Button>\n *       <Button>Ok</Button>\n *     </Card.Actions>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Card = ({\n  elevation: cardElevation = 1,\n  onLongPress,\n  onPress,\n  mode: cardMode = 'elevated',\n  children,\n  style,\n  theme,\n  testID,\n  accessible,\n  ...rest\n}: (OutlinedCardProps | ElevatedCardProps | ContainedCardProps) & Props) => {\n  const isMode = React.useCallback(\n    (modeToCompare: Mode) => {\n      return cardMode === modeToCompare;\n    },\n    [cardMode]\n  );\n\n  // Default animated value\n  const { current: elevation } = React.useRef<Animated.Value>(\n    new Animated.Value(cardElevation)\n  );\n  // Dark adaptive animated value, used in case of toggling the theme,\n  // it prevents animating the background with native drivers inside Surface\n  const { current: elevationDarkAdaptive } = React.useRef<Animated.Value>(\n    new Animated.Value(cardElevation)\n  );\n  const { animation, dark, mode, roundness, isV3 } = theme;\n\n  const prevDarkRef = React.useRef<boolean>(dark);\n  React.useEffect(() => {\n    prevDarkRef.current = dark;\n  });\n\n  const prevDark = prevDarkRef.current;\n  const isAdaptiveMode = mode === 'adaptive';\n  const animationDuration = 150 * animation.scale;\n\n  React.useEffect(() => {\n    /**\n     * Resets animations values if updating to dark adaptive mode,\n     * otherwise, any card that is in the middle of animation while\n     * toggling the theme will stay at that animated value until\n     * the next press-in\n     */\n    if (dark && isAdaptiveMode && !prevDark) {\n      elevation.setValue(cardElevation);\n      elevationDarkAdaptive.setValue(cardElevation);\n    }\n  }, [\n    prevDark,\n    dark,\n    isAdaptiveMode,\n    cardElevation,\n    elevation,\n    elevationDarkAdaptive,\n  ]);\n\n  const runElevationAnimation = (pressType: HandlePressType) => {\n    const isPressTypeIn = pressType === 'in';\n    if (dark && isAdaptiveMode) {\n      Animated.timing(elevationDarkAdaptive, {\n        toValue: isPressTypeIn ? (isV3 ? 2 : 8) : cardElevation,\n        duration: animationDuration,\n        useNativeDriver: false,\n      }).start();\n    } else {\n      Animated.timing(elevation, {\n        toValue: isPressTypeIn ? (isV3 ? 2 : 8) : cardElevation,\n        duration: animationDuration,\n        useNativeDriver: true,\n      }).start();\n    }\n  };\n\n  const handlePressIn = () => {\n    runElevationAnimation('in');\n  };\n\n  const handlePressOut = () => {\n    runElevationAnimation('out');\n  };\n\n  const total = React.Children.count(children);\n  const siblings = React.Children.map(children, (child) =>\n    React.isValidElement(child) && child.type\n      ? (child.type as any).displayName\n      : null\n  );\n  const computedElevation =\n    dark && isAdaptiveMode ? elevationDarkAdaptive : elevation;\n\n  const { backgroundColor, borderColor } = getCardColors({\n    theme,\n    mode: cardMode,\n  });\n\n  return (\n    <Surface\n      style={[\n        {\n          borderRadius: roundness,\n        },\n        isV3 && { backgroundColor },\n        !isV3 && isMode('outlined')\n          ? styles.resetElevation\n          : {\n              elevation: computedElevation as unknown as number,\n            },\n        style,\n      ]}\n      theme={theme}\n      {...(isV3 && {\n        elevation: isMode('elevated') ? computedElevation : 0,\n      })}\n      {...rest}\n    >\n      {isMode('outlined') && (\n        <View\n          pointerEvents=\"none\"\n          style={[\n            {\n              borderRadius: roundness,\n              borderColor,\n            },\n            styles.outline,\n          ]}\n        />\n      )}\n      <TouchableWithoutFeedback\n        delayPressIn={0}\n        disabled={!(onPress || onLongPress)}\n        onLongPress={onLongPress}\n        onPress={onPress}\n        onPressIn={onPress || onLongPress ? handlePressIn : undefined}\n        onPressOut={onPress || onLongPress ? handlePressOut : undefined}\n        testID={testID}\n        accessible={accessible}\n      >\n        <View style={styles.innerContainer}>\n          {React.Children.map(children, (child, index) =>\n            React.isValidElement(child)\n              ? React.cloneElement(child, {\n                  index,\n                  total,\n                  siblings,\n                })\n              : child\n          )}\n        </View>\n      </TouchableWithoutFeedback>\n    </Surface>\n  );\n};\n\n// @component ./CardContent.tsx\nCard.Content = CardContent;\n// @component ./CardActions.tsx\nCard.Actions = CardActions;\n// @component ./CardCover.tsx\nCard.Cover = CardCover;\n// @component ./CardTitle.tsx\nCard.Title = CardTitle;\n\nconst styles = StyleSheet.create({\n  innerContainer: {\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n  outline: {\n    borderWidth: 1,\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    zIndex: 2,\n  },\n  resetElevation: {\n    elevation: 0,\n  },\n});\n\nexport default withInternalTheme(Card);\n"],"mappings":"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"}