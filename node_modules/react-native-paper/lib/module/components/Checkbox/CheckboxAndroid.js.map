{"version":3,"names":["React","Animated","StyleSheet","View","withInternalTheme","MaterialCommunityIcon","TouchableRipple","getAndroidSelectionControlColor","ANIMATION_DURATION","CheckboxAndroid","status","theme","disabled","onPress","testID","rest","current","scaleAnim","useRef","Value","isFirstRendering","animation","scale","useEffect","checked","sequence","timing","toValue","duration","useNativeDriver","start","indeterminate","rippleColor","selectionControlColor","customColor","color","customUncheckedColor","uncheckedColor","borderWidth","interpolate","inputRange","outputRange","icon","styles","container","transform","absoluteFill","fillContainer","fill","borderColor","displayName","create","borderRadius","width","height","padding","alignItems","justifyContent","CheckboxAndroidWithTheme"],"sources":["CheckboxAndroid.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, InternalTheme } from '../../types';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { getAndroidSelectionControlColor } from './utils';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 100;\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nconst CheckboxAndroid = ({\n  status,\n  theme,\n  disabled,\n  onPress,\n  testID,\n  ...rest\n}: Props) => {\n  const { current: scaleAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(1)\n  );\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    const checked = status === 'checked';\n\n    Animated.sequence([\n      Animated.timing(scaleAnim, {\n        toValue: 0.85,\n        duration: checked ? ANIMATION_DURATION * scale : 0,\n        useNativeDriver: false,\n      }),\n      Animated.timing(scaleAnim, {\n        toValue: 1,\n        duration: checked\n          ? ANIMATION_DURATION * scale\n          : ANIMATION_DURATION * scale * 1.75,\n        useNativeDriver: false,\n      }),\n    ]).start();\n  }, [status, scaleAnim, scale]);\n\n  const checked = status === 'checked';\n  const indeterminate = status === 'indeterminate';\n\n  const { rippleColor, selectionControlColor } =\n    getAndroidSelectionControlColor({\n      theme,\n      disabled,\n      checked,\n      customColor: rest.color,\n      customUncheckedColor: rest.uncheckedColor,\n    });\n\n  const borderWidth = scaleAnim.interpolate({\n    inputRange: [0.8, 1],\n    outputRange: [7, 0],\n  });\n\n  const icon = indeterminate\n    ? 'minus-box'\n    : checked\n    ? 'checkbox-marked'\n    : 'checkbox-blank-outline';\n\n  return (\n    <TouchableRipple\n      {...rest}\n      borderless\n      rippleColor={rippleColor}\n      onPress={onPress}\n      disabled={disabled}\n      accessibilityRole=\"checkbox\"\n      accessibilityState={{ disabled, checked }}\n      accessibilityLiveRegion=\"polite\"\n      style={styles.container}\n      testID={testID}\n    >\n      <Animated.View style={{ transform: [{ scale: scaleAnim }] }}>\n        <MaterialCommunityIcon\n          allowFontScaling={false}\n          name={icon}\n          size={24}\n          color={selectionControlColor}\n          direction=\"ltr\"\n        />\n        <View style={[StyleSheet.absoluteFill, styles.fillContainer]}>\n          <Animated.View\n            style={[\n              styles.fill,\n              { borderColor: selectionControlColor },\n              { borderWidth },\n            ]}\n          />\n        </View>\n      </Animated.View>\n    </TouchableRipple>\n  );\n};\n\nCheckboxAndroid.displayName = 'Checkbox.Android';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    width: 36,\n    height: 36,\n    padding: 6,\n  },\n  fillContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fill: {\n    height: 14,\n    width: 14,\n  },\n});\n\nexport default withInternalTheme(CheckboxAndroid);\n\n// @component-docs ignore-next-line\nconst CheckboxAndroidWithTheme = withInternalTheme(CheckboxAndroid);\n// @component-docs ignore-next-line\nexport { CheckboxAndroidWithTheme as CheckboxAndroid };\n"],"mappings":"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"}