{"version":3,"names":["React","Animated","Platform","StyleSheet","TouchableWithoutFeedback","View","withInternalTheme","white","Icon","MaterialCommunityIcon","Surface","TouchableRipple","Text","getChipColors","Chip","mode","children","icon","avatar","selected","disabled","accessibilityLabel","closeIconAccessibilityLabel","onPress","onLongPress","onClose","closeIcon","textStyle","style","theme","testID","selectedColor","showSelectedOverlay","ellipsizeMode","compact","elevated","rest","isV3","current","elevation","useRef","Value","isOutlined","handlePressIn","scale","animation","timing","toValue","duration","useNativeDriver","start","handlePressOut","opacity","defaultBorderRadius","iconSize","backgroundColor","customBackgroundColor","borderRadius","flatten","borderColor","textColor","iconColor","underlayColor","selectedBackgroundColor","accessibilityState","elevationStyle","OS","multiplier","labelSpacings","marginRight","marginLeft","contentSpacings","paddingRight","labelTextStyle","color","fonts","labelLarge","regular","styles","container","md3OutlineContainer","md3FlatContainer","touchable","content","md3Content","avatarWrapper","md3AvatarWrapper","isValidElement","cloneElement","props","md3Icon","avatarSelected","md3SelectedIcon","colors","primary","md3LabelText","labelText","closeButtonStyle","md3CloseIcon","create","borderWidth","hairlineWidth","borderStyle","flexDirection","select","default","web","alignItems","paddingLeft","position","flexGrow","padding","alignSelf","minHeight","lineHeight","textAlignVertical","marginVertical","width","height","top","left","right","justifyContent"],"sources":["Chip.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityState,\n  Animated,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport { white } from '../../styles/themes/v2/colors';\nimport type { EllipsizeProp, InternalTheme } from '../../types';\nimport type { IconSource } from '../Icon';\nimport Icon from '../Icon';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { getChipColors } from './helpers';\n\nexport type Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Mode of the chip.\n   * - `flat` - flat chip without outline.\n   * - `outlined` - chip with an outline.\n   */\n  mode?: 'flat' | 'outlined';\n  /**\n   * Text content of the `Chip`.\n   */\n  children: React.ReactNode;\n  /**\n   * Icon to display for the `Chip`. Both icon and avatar cannot be specified.\n   */\n  icon?: IconSource;\n  /**\n   * Avatar to display for the `Chip`. Both icon and avatar cannot be specified.\n   */\n  avatar?: React.ReactNode;\n  /**\n   * Icon to display as the close button for the `Chip`. The icon appears only when the onClose prop is specified.\n   */\n  closeIcon?: IconSource;\n  /**\n   * Whether chip is selected.\n   */\n  selected?: boolean;\n  /**\n   * Whether to style the chip color as selected.\n   */\n  selectedColor?: string;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether to display overlay on selected chip\n   */\n  showSelectedOverlay?: boolean;\n  /**\n   * Whether the chip is disabled. A disabled chip is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Accessibility label for the chip. This is read by the screen reader when the user taps the chip.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility label for the close icon. This is read by the screen reader when the user taps the close icon.\n   */\n  closeIconAccessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Sets smaller horizontal paddings `12dp` around label, when there is only label.\n   */\n  compact?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether chip should have the elevation.\n   */\n  elevated?: boolean;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Function to execute on close button press. The close button appears only when this prop is specified.\n   */\n  onClose?: () => void;\n  /**\n   * Style of chip's text\n   */\n  textStyle?: StyleProp<TextStyle>;\n  style?: StyleProp<ViewStyle>;\n\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * Pass down testID from chip props to touchable for Detox tests.\n   */\n  testID?: string;\n  /**\n   * Ellipsize Mode for the children text\n   */\n  ellipsizeMode?: EllipsizeProp;\n};\n\n/**\n * Chips can be used to display entities in small blocks.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/chip-1.png\" />\n *     <figcaption>Flat chip</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/chip-2.png\" />\n *     <figcaption>Outlined chip</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Chip } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Chip icon=\"information\" onPress={() => console.log('Pressed')}>Example Chip</Chip>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Chip = ({\n  mode = 'flat',\n  children,\n  icon,\n  avatar,\n  selected = false,\n  disabled = false,\n  accessibilityLabel,\n  closeIconAccessibilityLabel = 'Close',\n  onPress,\n  onLongPress,\n  onClose,\n  closeIcon,\n  textStyle,\n  style,\n  theme,\n  testID,\n  selectedColor,\n  showSelectedOverlay = false,\n  ellipsizeMode,\n  compact,\n  elevated = false,\n  ...rest\n}: Props) => {\n  const { isV3 } = theme;\n\n  const { current: elevation } = React.useRef<Animated.Value>(\n    new Animated.Value(isV3 && elevated ? 1 : 0)\n  );\n\n  const isOutlined = mode === 'outlined';\n\n  const handlePressIn = () => {\n    const { scale } = theme.animation;\n    Animated.timing(elevation, {\n      toValue: isV3 ? (elevated ? 2 : 0) : 4,\n      duration: 200 * scale,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const handlePressOut = () => {\n    const { scale } = theme.animation;\n    Animated.timing(elevation, {\n      toValue: isV3 && elevated ? 1 : 0,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const opacity = isV3 ? 0.38 : 0.26;\n  const defaultBorderRadius = isV3 ? 8 : 16;\n  const iconSize = isV3 ? 18 : 16;\n\n  const {\n    backgroundColor: customBackgroundColor,\n    borderRadius = defaultBorderRadius,\n  } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n  const {\n    borderColor,\n    textColor,\n    iconColor,\n    underlayColor,\n    selectedBackgroundColor,\n    backgroundColor,\n  } = getChipColors({\n    isOutlined,\n    theme,\n    selectedColor,\n    showSelectedOverlay,\n    customBackgroundColor,\n    disabled,\n  });\n\n  const accessibilityState: AccessibilityState = {\n    selected,\n    disabled,\n  };\n\n  const elevationStyle = isV3 || Platform.OS === 'android' ? elevation : 0;\n  const multiplier = isV3 ? (compact ? 1.5 : 2) : 1;\n  const labelSpacings = {\n    marginRight: onClose ? 0 : 8 * multiplier,\n    marginLeft: avatar || icon || selected ? 4 * multiplier : 8 * multiplier,\n  };\n  const contentSpacings = {\n    paddingRight: isV3 ? (onClose ? 34 : 0) : onClose ? 32 : 4,\n  };\n  const labelTextStyle = {\n    color: textColor,\n    ...(isV3 ? theme.fonts.labelLarge : theme.fonts.regular),\n  };\n  return (\n    <Surface\n      style={\n        [\n          styles.container,\n          isV3 &&\n            (isOutlined ? styles.md3OutlineContainer : styles.md3FlatContainer),\n          !theme.isV3 && {\n            elevation: elevationStyle,\n          },\n          {\n            backgroundColor: selected\n              ? selectedBackgroundColor\n              : backgroundColor,\n            borderColor,\n            borderRadius,\n          },\n          style,\n        ] as StyleProp<ViewStyle>\n      }\n      {...(theme.isV3 && { elevation: elevationStyle })}\n      {...rest}\n    >\n      <TouchableRipple\n        borderless\n        style={[{ borderRadius }, styles.touchable]}\n        onPress={onPress}\n        onLongPress={onLongPress}\n        onPressIn={handlePressIn}\n        onPressOut={handlePressOut}\n        underlayColor={underlayColor}\n        disabled={disabled}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole=\"button\"\n        accessibilityState={accessibilityState}\n        testID={testID}\n      >\n        <View\n          style={[styles.content, isV3 && styles.md3Content, contentSpacings]}\n        >\n          {avatar && !icon ? (\n            <View\n              style={[\n                styles.avatarWrapper,\n                isV3 && styles.md3AvatarWrapper,\n                disabled && { opacity },\n              ]}\n            >\n              {React.isValidElement(avatar)\n                ? React.cloneElement(avatar, {\n                    style: [styles.avatar, avatar.props.style],\n                  })\n                : avatar}\n            </View>\n          ) : null}\n          {icon || selected ? (\n            <View\n              style={[\n                styles.icon,\n                isV3 && styles.md3Icon,\n                avatar\n                  ? [\n                      styles.avatar,\n                      styles.avatarSelected,\n                      isV3 && selected && styles.md3SelectedIcon,\n                    ]\n                  : null,\n              ]}\n            >\n              {icon ? (\n                <Icon\n                  source={icon}\n                  color={\n                    avatar\n                      ? white\n                      : !disabled && theme.isV3\n                      ? theme.colors.primary\n                      : iconColor\n                  }\n                  size={18}\n                />\n              ) : (\n                <MaterialCommunityIcon\n                  name=\"check\"\n                  color={avatar ? white : iconColor}\n                  size={18}\n                  direction=\"ltr\"\n                />\n              )}\n            </View>\n          ) : null}\n          <Text\n            variant=\"labelLarge\"\n            selectable={false}\n            numberOfLines={1}\n            style={[\n              isV3 ? styles.md3LabelText : styles.labelText,\n              labelTextStyle,\n              labelSpacings,\n              textStyle,\n            ]}\n            ellipsizeMode={ellipsizeMode}\n          >\n            {children}\n          </Text>\n        </View>\n      </TouchableRipple>\n      {onClose ? (\n        <View style={styles.closeButtonStyle}>\n          <TouchableWithoutFeedback\n            onPress={onClose}\n            accessibilityRole=\"button\"\n            accessibilityLabel={closeIconAccessibilityLabel}\n          >\n            <View\n              style={[\n                styles.icon,\n                styles.closeIcon,\n                isV3 && styles.md3CloseIcon,\n              ]}\n            >\n              {closeIcon ? (\n                <Icon source={closeIcon} color={iconColor} size={iconSize} />\n              ) : (\n                <MaterialCommunityIcon\n                  name={isV3 ? 'close' : 'close-circle'}\n                  size={iconSize}\n                  color={iconColor}\n                  direction=\"ltr\"\n                />\n              )}\n            </View>\n          </TouchableWithoutFeedback>\n        </View>\n      ) : null}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderWidth: StyleSheet.hairlineWidth,\n    borderStyle: 'solid',\n    flexDirection: Platform.select({ default: 'column', web: 'row' }),\n  },\n  md3OutlineContainer: {\n    borderWidth: 1,\n  },\n  md3FlatContainer: {\n    borderWidth: 0,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 4,\n    position: 'relative',\n    flexGrow: 1,\n  },\n  md3Content: {\n    paddingLeft: 0,\n  },\n  icon: {\n    padding: 4,\n    alignSelf: 'center',\n  },\n  md3Icon: {\n    paddingLeft: 8,\n    paddingRight: 0,\n  },\n  closeIcon: {\n    marginRight: 4,\n  },\n  md3CloseIcon: {\n    marginRight: 8,\n    padding: 0,\n  },\n  labelText: {\n    minHeight: 24,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n    marginVertical: 4,\n  },\n  md3LabelText: {\n    textAlignVertical: 'center',\n    marginVertical: 6,\n  },\n  avatar: {\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n  },\n  avatarWrapper: {\n    marginRight: 4,\n  },\n  md3AvatarWrapper: {\n    marginLeft: 4,\n    marginRight: 0,\n  },\n  md3SelectedIcon: {\n    paddingLeft: 4,\n  },\n  avatarSelected: {\n    position: 'absolute',\n    top: 4,\n    left: 4,\n    backgroundColor: 'rgba(0, 0, 0, .29)',\n  },\n  closeButtonStyle: {\n    position: 'absolute',\n    right: 0,\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  touchable: {\n    flexGrow: 1,\n  },\n});\n\nexport default withInternalTheme(Chip);\n"],"mappings":"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"}