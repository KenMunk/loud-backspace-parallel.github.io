{"version":3,"names":["React","StyleSheet","View","useInternalTheme","DialogScrollArea","props","theme","borderStyles","borderColor","isV3","colors","surfaceVariant","borderTopWidth","hairlineWidth","borderBottomWidth","styles","container","v3Container","style","children","displayName","create","paddingHorizontal","flexGrow","flexShrink","marginBottom"],"sources":["DialogScrollArea.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogScrollArea`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a scrollable content in a Dialog. The component only provides appropriate styling.\n * For the scrollable content you can use `ScrollView`, `FlatList` etc. depending on your requirement.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/dialog-scroll-area.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ScrollView } from 'react-native';\n * import { Dialog, Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.ScrollArea>\n *           <ScrollView contentContainerStyle={{paddingHorizontal: 24}}>\n *             <Text>This is a scrollable area</Text>\n *           </ScrollView>\n *         </Dialog.ScrollArea>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogScrollArea = (props: Props) => {\n  const theme = useInternalTheme();\n  const borderStyles = {\n    borderColor: theme.isV3\n      ? theme.colors.surfaceVariant\n      : 'rgba(0, 0, 0, .12)',\n    borderTopWidth: theme.isV3 ? 1 : StyleSheet.hairlineWidth,\n    borderBottomWidth: theme.isV3 ? 1 : StyleSheet.hairlineWidth,\n  };\n  return (\n    <View\n      {...props}\n      style={[\n        styles.container,\n        borderStyles,\n        theme.isV3 && styles.v3Container,\n        props.style,\n      ]}\n    >\n      {props.children}\n    </View>\n  );\n};\n\nDialogScrollArea.displayName = 'Dialog.ScrollArea';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 24,\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n  v3Container: {\n    marginBottom: 24,\n  },\n});\n\nexport default DialogScrollArea;\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAoBC,UAApB,EAAgCC,IAAhC,QAAuD,cAAvD;AAEA,SAASC,gBAAT,QAAiC,oBAAjC;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAIC,KAAD,IAAkB;EACzC,MAAMC,KAAK,GAAGH,gBAAgB,EAA9B;EACA,MAAMI,YAAY,GAAG;IACnBC,WAAW,EAAEF,KAAK,CAACG,IAAN,GACTH,KAAK,CAACI,MAAN,CAAaC,cADJ,GAET,oBAHe;IAInBC,cAAc,EAAEN,KAAK,CAACG,IAAN,GAAa,CAAb,GAAiBR,UAAU,CAACY,aAJzB;IAKnBC,iBAAiB,EAAER,KAAK,CAACG,IAAN,GAAa,CAAb,GAAiBR,UAAU,CAACY;EAL5B,CAArB;EAOA,oBACE,oBAAC,IAAD,eACMR,KADN;IAEE,KAAK,EAAE,CACLU,MAAM,CAACC,SADF,EAELT,YAFK,EAGLD,KAAK,CAACG,IAAN,IAAcM,MAAM,CAACE,WAHhB,EAILZ,KAAK,CAACa,KAJD;EAFT,IASGb,KAAK,CAACc,QATT,CADF;AAaD,CAtBD;;AAwBAf,gBAAgB,CAACgB,WAAjB,GAA+B,mBAA/B;AAEA,MAAML,MAAM,GAAGd,UAAU,CAACoB,MAAX,CAAkB;EAC/BL,SAAS,EAAE;IACTM,iBAAiB,EAAE,EADV;IAETC,QAAQ,EAAE,CAFD;IAGTC,UAAU,EAAE;EAHH,CADoB;EAM/BP,WAAW,EAAE;IACXQ,YAAY,EAAE;EADH;AANkB,CAAlB,CAAf;AAWA,eAAerB,gBAAf"}