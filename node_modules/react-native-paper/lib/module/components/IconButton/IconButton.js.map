{"version":3,"names":["React","StyleSheet","useInternalTheme","CrossFadeIcon","Icon","Surface","TouchableRipple","getIconButtonColor","PADDING","IconButton","icon","iconColor","customIconColor","containerColor","customContainerColor","size","accessibilityLabel","disabled","onPress","selected","animated","mode","style","rest","theme","isV3","IconComponent","rippleColor","backgroundColor","borderColor","buttonSize","borderStyles","borderWidth","borderRadius","width","height","styles","container","elevation","touchable","supported","top","left","bottom","right","create","overflow","margin","flexGrow","justifyContent","alignItems","opacity"],"sources":["IconButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { getIconButtonColor } from './utils';\n\nconst PADDING = 8;\n\ntype IconButtonMode = 'outlined' | 'contained' | 'contained-tonal';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Icon to display.\n   */\n  icon: IconSource;\n  /**\n   * @supported Available in v5.x\n   * Mode of the icon button. By default there is no specified mode - only pressable icon will be rendered.\n   */\n  mode?: IconButtonMode;\n  /**\n   * @renamed Renamed from 'color' to 'iconColor' in v5.x\n   * Color of the icon.\n   */\n  iconColor?: string;\n  /**\n   * @supported Available in v5.x\n   * Background color of the icon container.\n   */\n  containerColor?: string;\n  /**\n   * @supported Available in v5.x\n   * Whether icon button is selected. A selected button receives alternative combination of icon and container colors.\n   */\n  selected?: boolean;\n  /**\n   * Size of the icon.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether an icon change is animated.\n   */\n  animated?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<TouchableWithoutFeedback>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * An icon button is a button which displays only an icon without a label.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/icon-button-1.png\" />\n *     <figcaption>Default icon button</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/icon-button-2.png\" />\n *     <figcaption>Contained icon button</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/icon-button-3.png\" />\n *     <figcaption>Contained-tonal icon button</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/icon-button-4.png\" />\n *     <figcaption>Outlined icon button</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { IconButton, MD3Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <IconButton\n *     icon=\"camera\"\n *     iconColor={MD3Colors.error50}\n *     size={20}\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/touchable-ripple.html\n */\nconst IconButton = ({\n  icon,\n  iconColor: customIconColor,\n  containerColor: customContainerColor,\n  size = 24,\n  accessibilityLabel,\n  disabled,\n  onPress,\n  selected = false,\n  animated = false,\n  mode,\n  style,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme();\n  const { isV3 } = theme;\n\n  const IconComponent = animated ? CrossFadeIcon : Icon;\n\n  const { iconColor, rippleColor, backgroundColor, borderColor } =\n    getIconButtonColor({\n      theme,\n      disabled,\n      selected,\n      mode,\n      customIconColor,\n      customContainerColor,\n    });\n\n  const buttonSize = isV3 ? size + 2 * PADDING : size * 1.5;\n\n  const borderStyles = {\n    borderWidth: isV3 && mode === 'outlined' && !selected ? 1 : 0,\n    borderRadius: buttonSize / 2,\n    borderColor,\n  };\n\n  return (\n    <Surface\n      style={\n        [\n          {\n            backgroundColor,\n            width: buttonSize,\n            height: buttonSize,\n          },\n          styles.container,\n          borderStyles,\n          !isV3 && disabled && styles.disabled,\n          style,\n        ] as StyleProp<ViewStyle>\n      }\n      {...(isV3 && { elevation: 0 })}\n    >\n      <TouchableRipple\n        borderless\n        centered\n        onPress={onPress}\n        rippleColor={rippleColor}\n        accessibilityLabel={accessibilityLabel}\n        style={styles.touchable}\n        // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n        accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n        accessibilityComponentType=\"button\"\n        accessibilityRole=\"button\"\n        accessibilityState={{ disabled }}\n        disabled={disabled}\n        hitSlop={\n          TouchableRipple.supported\n            ? { top: 10, left: 10, bottom: 10, right: 10 }\n            : { top: 6, left: 6, bottom: 6, right: 6 }\n        }\n        {...rest}\n      >\n        <IconComponent color={iconColor} source={icon} size={size} />\n      </TouchableRipple>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    margin: 6,\n    elevation: 0,\n  },\n  touchable: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  disabled: {\n    opacity: 0.32,\n  },\n});\n\nexport default IconButton;\n"],"mappings":"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"}