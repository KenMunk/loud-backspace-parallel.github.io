{"version":3,"names":["React","I18nManager","StyleSheet","View","color","withInternalTheme","MaterialCommunityIcon","TouchableRipple","Text","ListAccordionGroupContext","ListAccordion","left","right","title","description","children","theme","titleStyle","descriptionStyle","titleNumberOfLines","descriptionNumberOfLines","style","id","testID","onPress","onLongPress","expanded","expandedProp","accessibilityLabel","setExpanded","useState","handlePressAction","undefined","titleColor","isV3","colors","onSurface","text","alpha","rgb","string","descriptionColor","onSurfaceVariant","expandedInternal","groupContext","useContext","Error","isExpanded","expandedId","handlePress","onAccordionPress","backgroundColor","background","styles","container","row","primary","item","content","multiline","getConstants","isRTL","Children","map","child","isValidElement","props","cloneElement","displayName","create","padding","flexDirection","alignItems","height","justifyContent","fontSize","margin","paddingLeft","flex"],"sources":["ListAccordion.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { ListAccordionGroupContext } from './ListAccordionGroup';\n\nexport type Props = {\n  /**\n   * Title text for the list accordion.\n   */\n  title: React.ReactNode;\n  /**\n   * Description text for the list accordion.\n   */\n  description?: React.ReactNode;\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: { color: string }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to display on the right side.\n   */\n  right?: (props: { isExpanded: boolean }) => React.ReactNode;\n  /**\n   * Whether the accordion is expanded\n   * If this prop is provided, the accordion will behave as a \"controlled component\".\n   * You'll need to update this prop when you want to toggle the component or on `onPress`.\n   */\n  expanded?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Content of the section.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * Style that is passed to the wrapping TouchableRipple element.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Title element.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Style that is passed to Description element.\n   */\n  descriptionStyle?: StyleProp<TextStyle>;\n  /**\n   * Truncate Title text such that the total number of lines does not\n   * exceed this number.\n   */\n  titleNumberOfLines?: number;\n  /**\n   * Truncate Description text such that the total number of lines does not\n   * exceed this number.\n   */\n  descriptionNumberOfLines?: number;\n  /**\n   * Id is used for distinguishing specific accordion when using List.AccordionGroup. Property is required when using List.AccordionGroup and has no impact on behavior when using standalone List.Accordion.\n   */\n  id?: string | number;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * Accessibility label for the TouchableRipple. This is read by the screen reader when the user taps the touchable.\n   */\n  accessibilityLabel?: string;\n};\n\n/**\n * A component used to display an expandable list item.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/list-accordion-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-accordion-2.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-accordion-3.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [expanded, setExpanded] = React.useState(true);\n *\n *   const handlePress = () => setExpanded(!expanded);\n *\n *   return (\n *     <List.Section title=\"Accordions\">\n *       <List.Accordion\n *         title=\"Uncontrolled Accordion\"\n *         left={props => <List.Icon {...props} icon=\"folder\" />}>\n *         <List.Item title=\"First item\" />\n *         <List.Item title=\"Second item\" />\n *       </List.Accordion>\n *\n *       <List.Accordion\n *         title=\"Controlled Accordion\"\n *         left={props => <List.Icon {...props} icon=\"folder\" />}\n *         expanded={expanded}\n *         onPress={handlePress}>\n *         <List.Item title=\"First item\" />\n *         <List.Item title=\"Second item\" />\n *       </List.Accordion>\n *     </List.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst ListAccordion = ({\n  left,\n  right,\n  title,\n  description,\n  children,\n  theme,\n  titleStyle,\n  descriptionStyle,\n  titleNumberOfLines = 1,\n  descriptionNumberOfLines = 2,\n  style,\n  id,\n  testID,\n  onPress,\n  onLongPress,\n  expanded: expandedProp,\n  accessibilityLabel,\n}: Props) => {\n  const [expanded, setExpanded] = React.useState<boolean>(\n    expandedProp || false\n  );\n\n  const handlePressAction = () => {\n    onPress?.();\n\n    if (expandedProp === undefined) {\n      // Only update state of the `expanded` prop was not passed\n      // If it was passed, the component will act as a controlled component\n      setExpanded((expanded) => !expanded);\n    }\n  };\n\n  const titleColor = theme.isV3\n    ? theme.colors.onSurface\n    : color(theme.colors.text).alpha(0.87).rgb().string();\n  const descriptionColor = theme.isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.54).rgb().string();\n\n  const expandedInternal = expandedProp !== undefined ? expandedProp : expanded;\n\n  const groupContext = React.useContext(ListAccordionGroupContext);\n  if (groupContext !== null && !id) {\n    throw new Error(\n      'List.Accordion is used inside a List.AccordionGroup without specifying an id prop.'\n    );\n  }\n  const isExpanded = groupContext\n    ? groupContext.expandedId === id\n    : expandedInternal;\n  const handlePress =\n    groupContext && id !== undefined\n      ? () => groupContext.onAccordionPress(id)\n      : handlePressAction;\n  return (\n    <View>\n      <View style={{ backgroundColor: theme?.colors?.background }}>\n        <TouchableRipple\n          style={[styles.container, style]}\n          onPress={handlePress}\n          onLongPress={onLongPress}\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: isExpanded }}\n          accessibilityLabel={accessibilityLabel}\n          testID={testID}\n          borderless\n        >\n          <View style={styles.row} pointerEvents=\"none\">\n            {left\n              ? left({\n                  color: isExpanded ? theme.colors?.primary : descriptionColor,\n                })\n              : null}\n            <View style={[styles.item, styles.content]}>\n              <Text\n                selectable={false}\n                numberOfLines={titleNumberOfLines}\n                style={[\n                  styles.title,\n                  {\n                    color: isExpanded ? theme.colors?.primary : titleColor,\n                  },\n                  titleStyle,\n                ]}\n              >\n                {title}\n              </Text>\n              {description ? (\n                <Text\n                  selectable={false}\n                  numberOfLines={descriptionNumberOfLines}\n                  style={[\n                    styles.description,\n                    {\n                      color: descriptionColor,\n                    },\n                    descriptionStyle,\n                  ]}\n                >\n                  {description}\n                </Text>\n              ) : null}\n            </View>\n            <View\n              style={[styles.item, description ? styles.multiline : undefined]}\n            >\n              {right ? (\n                right({\n                  isExpanded: isExpanded,\n                })\n              ) : (\n                <MaterialCommunityIcon\n                  name={isExpanded ? 'chevron-up' : 'chevron-down'}\n                  color={theme.isV3 ? descriptionColor : titleColor}\n                  size={24}\n                  direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n                />\n              )}\n            </View>\n          </View>\n        </TouchableRipple>\n      </View>\n\n      {isExpanded\n        ? React.Children.map(children, (child) => {\n            if (\n              left &&\n              React.isValidElement(child) &&\n              !child.props.left &&\n              !child.props.right\n            ) {\n              return React.cloneElement(child, {\n                style: [styles.child, child.props.style],\n              });\n            }\n\n            return child;\n          })\n        : null}\n    </View>\n  );\n};\n\nListAccordion.displayName = 'List.Accordion';\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  multiline: {\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 16,\n  },\n  description: {\n    fontSize: 14,\n  },\n  item: {\n    margin: 8,\n  },\n  child: {\n    paddingLeft: 64,\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n});\n\nexport default withInternalTheme(ListAccordion);\n"],"mappings":"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"}