{"version":3,"names":["React","Animated","StyleSheet","View","withInternalTheme","getAndroidSelectionControlColor","TouchableRipple","RadioButtonContext","handlePress","isChecked","BORDER_WIDTH","RadioButtonAndroid","disabled","onPress","theme","value","status","testID","rest","current","borderAnim","useRef","Value","radioAnim","isFirstRendering","scale","animation","useEffect","setValue","timing","toValue","duration","useNativeDriver","start","context","checked","contextValue","rippleColor","selectionControlColor","customColor","color","customUncheckedColor","uncheckedColor","undefined","onValueChange","styles","container","radio","borderColor","borderWidth","absoluteFill","radioContainer","dot","backgroundColor","transform","displayName","create","borderRadius","alignItems","justifyContent","height","width","margin","RadioButtonAndroidWithTheme"],"sources":["RadioButtonAndroid.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, InternalTheme } from '../../types';\nimport { getAndroidSelectionControlColor } from '../Checkbox/utils';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport { handlePress, isChecked } from './utils';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (param?: any) => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\nconst BORDER_WIDTH = 2;\n\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.android.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.android.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nconst RadioButtonAndroid = ({\n  disabled,\n  onPress,\n  theme,\n  value,\n  status,\n  testID,\n  ...rest\n}: Props) => {\n  const { current: borderAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(BORDER_WIDTH)\n  );\n\n  const { current: radioAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(1)\n  );\n\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    if (status === 'checked') {\n      radioAnim.setValue(1.2);\n\n      Animated.timing(radioAnim, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      borderAnim.setValue(10);\n\n      Animated.timing(borderAnim, {\n        toValue: BORDER_WIDTH,\n        duration: 150 * scale,\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [status, borderAnim, radioAnim, scale]);\n\n  return (\n    <RadioButtonContext.Consumer>\n      {(context?: RadioButtonContextType) => {\n        const checked =\n          isChecked({\n            contextValue: context?.value,\n            status,\n            value,\n          }) === 'checked';\n\n        const { rippleColor, selectionControlColor } =\n          getAndroidSelectionControlColor({\n            theme,\n            disabled,\n            checked,\n            customColor: rest.color,\n            customUncheckedColor: rest.uncheckedColor,\n          });\n\n        return (\n          <TouchableRipple\n            {...rest}\n            borderless\n            rippleColor={rippleColor}\n            onPress={\n              disabled\n                ? undefined\n                : () => {\n                    handlePress({\n                      onPress,\n                      onValueChange: context?.onValueChange,\n                      value,\n                    });\n                  }\n            }\n            accessibilityRole=\"radio\"\n            accessibilityState={{ disabled, checked }}\n            accessibilityLiveRegion=\"polite\"\n            style={styles.container}\n            testID={testID}\n          >\n            <Animated.View\n              style={[\n                styles.radio,\n                {\n                  borderColor: selectionControlColor,\n                  borderWidth: borderAnim,\n                },\n              ]}\n            >\n              {checked ? (\n                <View style={[StyleSheet.absoluteFill, styles.radioContainer]}>\n                  <Animated.View\n                    style={[\n                      styles.dot,\n                      {\n                        backgroundColor: selectionControlColor,\n                        transform: [{ scale: radioAnim }],\n                      },\n                    ]}\n                  />\n                </View>\n              ) : null}\n            </Animated.View>\n          </TouchableRipple>\n        );\n      }}\n    </RadioButtonContext.Consumer>\n  );\n};\n\nRadioButtonAndroid.displayName = 'RadioButton.Android';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n  },\n  radioContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  radio: {\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    margin: 8,\n  },\n  dot: {\n    height: 10,\n    width: 10,\n    borderRadius: 5,\n  },\n});\n\nexport default withInternalTheme(RadioButtonAndroid);\n\n// @component-docs ignore-next-line\nconst RadioButtonAndroidWithTheme = withInternalTheme(RadioButtonAndroid);\n// @component-docs ignore-next-line\nexport { RadioButtonAndroidWithTheme as RadioButtonAndroid };\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,IAA/B,QAA2C,cAA3C;AAEA,SAASC,iBAAT,QAAkC,oBAAlC;AAEA,SAASC,+BAAT,QAAgD,mBAAhD;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,SAASC,kBAAT,QAA2D,oBAA3D;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,SAAvC;AAqCA,MAAMC,YAAY,GAAG,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,kBAAkB,GAAG,QAQd;EAAA,IARe;IAC1BC,QAD0B;IAE1BC,OAF0B;IAG1BC,KAH0B;IAI1BC,KAJ0B;IAK1BC,MAL0B;IAM1BC,MAN0B;IAO1B,GAAGC;EAPuB,CAQf;EACX,MAAM;IAAEC,OAAO,EAAEC;EAAX,IAA0BpB,KAAK,CAACqB,MAAN,CAC9B,IAAIpB,QAAQ,CAACqB,KAAb,CAAmBZ,YAAnB,CAD8B,CAAhC;EAIA,MAAM;IAAES,OAAO,EAAEI;EAAX,IAAyBvB,KAAK,CAACqB,MAAN,CAC7B,IAAIpB,QAAQ,CAACqB,KAAb,CAAmB,CAAnB,CAD6B,CAA/B;EAIA,MAAME,gBAAgB,GAAGxB,KAAK,CAACqB,MAAN,CAAsB,IAAtB,CAAzB;EAEA,MAAM;IAAEI;EAAF,IAAYX,KAAK,CAACY,SAAxB;EAEA1B,KAAK,CAAC2B,SAAN,CAAgB,MAAM;IACpB;IACA,IAAIH,gBAAgB,CAACL,OAArB,EAA8B;MAC5BK,gBAAgB,CAACL,OAAjB,GAA2B,KAA3B;MACA;IACD;;IAED,IAAIH,MAAM,KAAK,SAAf,EAA0B;MACxBO,SAAS,CAACK,QAAV,CAAmB,GAAnB;MAEA3B,QAAQ,CAAC4B,MAAT,CAAgBN,SAAhB,EAA2B;QACzBO,OAAO,EAAE,CADgB;QAEzBC,QAAQ,EAAE,MAAMN,KAFS;QAGzBO,eAAe,EAAE;MAHQ,CAA3B,EAIGC,KAJH;IAKD,CARD,MAQO;MACLb,UAAU,CAACQ,QAAX,CAAoB,EAApB;MAEA3B,QAAQ,CAAC4B,MAAT,CAAgBT,UAAhB,EAA4B;QAC1BU,OAAO,EAAEpB,YADiB;QAE1BqB,QAAQ,EAAE,MAAMN,KAFU;QAG1BO,eAAe,EAAE;MAHS,CAA5B,EAIGC,KAJH;IAKD;EACF,CAxBD,EAwBG,CAACjB,MAAD,EAASI,UAAT,EAAqBG,SAArB,EAAgCE,KAAhC,CAxBH;EA0BA,oBACE,oBAAC,kBAAD,CAAoB,QAApB,QACIS,OAAD,IAAsC;IACrC,MAAMC,OAAO,GACX1B,SAAS,CAAC;MACR2B,YAAY,EAAEF,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEnB,KADf;MAERC,MAFQ;MAGRD;IAHQ,CAAD,CAAT,KAIO,SALT;IAOA,MAAM;MAAEsB,WAAF;MAAeC;IAAf,IACJjC,+BAA+B,CAAC;MAC9BS,KAD8B;MAE9BF,QAF8B;MAG9BuB,OAH8B;MAI9BI,WAAW,EAAErB,IAAI,CAACsB,KAJY;MAK9BC,oBAAoB,EAAEvB,IAAI,CAACwB;IALG,CAAD,CADjC;IASA,oBACE,oBAAC,eAAD,eACMxB,IADN;MAEE,UAAU,MAFZ;MAGE,WAAW,EAAEmB,WAHf;MAIE,OAAO,EACLzB,QAAQ,GACJ+B,SADI,GAEJ,MAAM;QACJnC,WAAW,CAAC;UACVK,OADU;UAEV+B,aAAa,EAAEV,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEU,aAFd;UAGV7B;QAHU,CAAD,CAAX;MAKD,CAbT;MAeE,iBAAiB,EAAC,OAfpB;MAgBE,kBAAkB,EAAE;QAAEH,QAAF;QAAYuB;MAAZ,CAhBtB;MAiBE,uBAAuB,EAAC,QAjB1B;MAkBE,KAAK,EAAEU,MAAM,CAACC,SAlBhB;MAmBE,MAAM,EAAE7B;IAnBV,iBAqBE,oBAAC,QAAD,CAAU,IAAV;MACE,KAAK,EAAE,CACL4B,MAAM,CAACE,KADF,EAEL;QACEC,WAAW,EAAEV,qBADf;QAEEW,WAAW,EAAE7B;MAFf,CAFK;IADT,GASGe,OAAO,gBACN,oBAAC,IAAD;MAAM,KAAK,EAAE,CAACjC,UAAU,CAACgD,YAAZ,EAA0BL,MAAM,CAACM,cAAjC;IAAb,gBACE,oBAAC,QAAD,CAAU,IAAV;MACE,KAAK,EAAE,CACLN,MAAM,CAACO,GADF,EAEL;QACEC,eAAe,EAAEf,qBADnB;QAEEgB,SAAS,EAAE,CAAC;UAAE7B,KAAK,EAAEF;QAAT,CAAD;MAFb,CAFK;IADT,EADF,CADM,GAYJ,IArBN,CArBF,CADF;EA+CD,CAjEH,CADF;AAqED,CApHD;;AAsHAZ,kBAAkB,CAAC4C,WAAnB,GAAiC,qBAAjC;AAEA,MAAMV,MAAM,GAAG3C,UAAU,CAACsD,MAAX,CAAkB;EAC/BV,SAAS,EAAE;IACTW,YAAY,EAAE;EADL,CADoB;EAI/BN,cAAc,EAAE;IACdO,UAAU,EAAE,QADE;IAEdC,cAAc,EAAE;EAFF,CAJe;EAQ/BZ,KAAK,EAAE;IACLa,MAAM,EAAE,EADH;IAELC,KAAK,EAAE,EAFF;IAGLJ,YAAY,EAAE,EAHT;IAILK,MAAM,EAAE;EAJH,CARwB;EAc/BV,GAAG,EAAE;IACHQ,MAAM,EAAE,EADL;IAEHC,KAAK,EAAE,EAFJ;IAGHJ,YAAY,EAAE;EAHX;AAd0B,CAAlB,CAAf;AAqBA,eAAerD,iBAAiB,CAACO,kBAAD,CAAhC,C,CAEA;;AACA,MAAMoD,2BAA2B,GAAG3D,iBAAiB,CAACO,kBAAD,CAArD,C,CACA;;AACA,SAASoD,2BAA2B,IAAIpD,kBAAxC"}