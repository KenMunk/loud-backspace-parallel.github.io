{"version":3,"names":["StyleSheet","color","black","white","DEFAULT_PADDING","getSegmentedButtonDensityPadding","density","padding","getDisabledSegmentedButtonStyle","theme","index","buttons","width","getSegmentedButtonBorderWidth","isDisabled","disabled","isNextDisabled","borderRightWidth","getSegmentedButtonBorderRadius","segment","borderTopRightRadius","borderBottomRightRadius","isV3","borderTopLeftRadius","borderBottomLeftRadius","borderRadius","getSegmentedButtonBackgroundColor","checked","colors","secondaryContainer","primary","alpha","rgb","string","getSegmentedButtonBorderColor","surfaceDisabled","outline","dark","hairlineWidth","getSegmentedButtonTextColor","onSurfaceDisabled","onSurface","getSegmentedButtonColors","backgroundColor","borderColor","textColor","borderWidth"],"sources":["utils.ts"],"sourcesContent":["import { StyleSheet, ViewStyle } from 'react-native';\n\nimport color from 'color';\n\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n  checked: boolean;\n};\n\nconst DEFAULT_PADDING = 9;\n\nexport const getSegmentedButtonDensityPadding = ({\n  density,\n}: {\n  density?: 'regular' | 'small' | 'medium' | 'high';\n}) => {\n  let padding = DEFAULT_PADDING;\n\n  switch (density) {\n    case 'small':\n      return padding - 2;\n    case 'medium':\n      return padding - 4;\n    case 'high':\n      return padding - 8;\n    default:\n      return padding;\n  }\n};\n\nexport const getDisabledSegmentedButtonStyle = ({\n  theme,\n  index,\n  buttons,\n}: {\n  theme: InternalTheme;\n  buttons: { disabled?: boolean }[];\n  index: number;\n}): ViewStyle => {\n  const width = getSegmentedButtonBorderWidth({ theme });\n  const isDisabled = buttons[index]?.disabled;\n  const isNextDisabled = buttons[index + 1]?.disabled;\n\n  if (!isDisabled && isNextDisabled) {\n    return {\n      borderRightWidth: width,\n    };\n  }\n  return {};\n};\n\nexport const getSegmentedButtonBorderRadius = ({\n  segment,\n  theme,\n}: {\n  theme: InternalTheme;\n  segment?: 'first' | 'last';\n}): ViewStyle => {\n  if (segment === 'first') {\n    return {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0,\n      ...(theme.isV3 && { borderRightWidth: 0 }),\n    };\n  } else if (segment === 'last') {\n    return {\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0,\n    };\n  } else {\n    return {\n      borderRadius: 0,\n      ...(theme.isV3 && { borderRightWidth: 0 }),\n    };\n  }\n};\n\nconst getSegmentedButtonBackgroundColor = ({ checked, theme }: BaseProps) => {\n  if (checked) {\n    if (theme.isV3) {\n      return theme.colors.secondaryContainer;\n    } else {\n      return color(theme.colors.primary).alpha(0.12).rgb().string();\n    }\n  }\n  return 'transparent';\n};\n\nconst getSegmentedButtonBorderColor = ({\n  theme,\n  disabled,\n  checked,\n}: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.surfaceDisabled;\n    }\n    return theme.colors.outline;\n  }\n  if (checked) {\n    return theme.colors.primary;\n  }\n\n  return color(theme.dark ? white : black)\n    .alpha(0.29)\n    .rgb()\n    .string();\n};\n\nconst getSegmentedButtonBorderWidth = ({\n  theme,\n}: Omit<BaseProps, 'disabled' | 'checked'>) => {\n  if (theme.isV3) {\n    return 1;\n  }\n\n  return StyleSheet.hairlineWidth;\n};\n\nconst getSegmentedButtonTextColor = ({\n  theme,\n  disabled,\n}: Omit<BaseProps, 'checked'>) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.onSurface;\n  } else {\n    if (disabled) {\n      return theme.colors.disabled;\n    }\n    return theme.colors.primary;\n  }\n};\n\nexport const getSegmentedButtonColors = ({\n  theme,\n  disabled,\n  checked,\n}: BaseProps) => {\n  const backgroundColor = getSegmentedButtonBackgroundColor({\n    theme,\n    checked,\n  });\n  const borderColor = getSegmentedButtonBorderColor({\n    theme,\n    disabled,\n    checked,\n  });\n  const textColor = getSegmentedButtonTextColor({ theme, disabled });\n  const borderWidth = getSegmentedButtonBorderWidth({ theme });\n\n  return { backgroundColor, borderColor, textColor, borderWidth };\n};\n"],"mappings":"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"}