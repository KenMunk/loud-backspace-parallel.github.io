{"version":3,"names":["React","Animated","TextInput","NativeTextInput","withInternalTheme","TextInputAffix","TextInputIcon","TextInputFlat","TextInputOutlined","BLUR_ANIMATION_DURATION","FOCUS_ANIMATION_DURATION","forwardRef","ref","mode","dense","disabled","error","errorProp","multiline","editable","render","props","rest","isControlled","value","undefined","validInputValue","defaultValue","current","labeled","useRef","Value","focused","setFocused","useState","placeholder","setPlaceholder","uncontrolledValue","setUncontrolledValue","labelLayout","setLabelLayout","measured","width","height","leftLayout","setLeftLayout","rightLayout","setRightLayout","timer","root","scale","theme","animation","useImperativeHandle","focus","clear","setNativeProps","args","isFocused","blur","forceFocus","useEffect","timing","toValue","duration","useNativeDriver","start","label","setTimeout","clearTimeout","onLeftAffixLayoutChange","event","nativeEvent","layout","onRightAffixLayoutChange","handleFocus","onFocus","handleBlur","onBlur","handleChangeText","onChangeText","handleLayoutAnimatedText","e","maxFontSizeMultiplier","Icon","Affix"],"sources":["TextInput.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  StyleProp,\n  TextInput as NativeTextInput,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport TextInputAffix, {\n  Props as TextInputAffixProps,\n} from './Adornment/TextInputAffix';\nimport TextInputIcon, {\n  Props as TextInputIconProps,\n} from './Adornment/TextInputIcon';\nimport TextInputFlat from './TextInputFlat';\nimport TextInputOutlined from './TextInputOutlined';\nimport type { RenderProps, TextInputLabelProp } from './types';\n\nconst BLUR_ANIMATION_DURATION = 180;\nconst FOCUS_ANIMATION_DURATION = 150;\n\nexport type Props = React.ComponentPropsWithRef<typeof NativeTextInput> & {\n  /**\n   * Mode of the TextInput.\n   * - `flat` - flat input with an underline.\n   * - `outlined` - input with an outline.\n   *\n   * In `outlined` mode, the background color of the label is derived from `colors?.background` in theme or the `backgroundColor` style.\n   * This component render TextInputOutlined or TextInputFlat based on that props\n   */\n  mode?: 'flat' | 'outlined';\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  /**\n   * If true, user won't be able to interact with the component.\n   */\n  disabled?: boolean;\n  /**\n   * The text or component to use for the floating label.\n   */\n  label?: TextInputLabelProp;\n  /**\n   * Placeholder for the input.\n   */\n  placeholder?: string;\n  /**\n   * Whether to style the TextInput with error style.\n   */\n  error?: boolean;\n  /**\n   * Callback that is called when the text input's text changes. Changed text is passed as an argument to the callback handler.\n   */\n  onChangeText?: Function;\n  /**\n   * Selection color of the input.\n   */\n  selectionColor?: string;\n  /**\n   * Inactive underline color of the input.\n   */\n  underlineColor?: string;\n  /**\n   * Active underline color of the input.\n   */\n  activeUnderlineColor?: string;\n  /**\n   * Inactive outline color of the input.\n   */\n  outlineColor?: string;\n  /**\n   * Active outline color of the input.\n   */\n  activeOutlineColor?: string;\n  /**\n   * @supported Available in v5.x\n   * Color of the text in the input.\n   */\n  textColor?: string;\n  /**\n   * Sets min height with densed layout. For `TextInput` in `flat` mode\n   * height is `64dp` or in dense layout - `52dp` with label or `40dp` without label.\n   * For `TextInput` in `outlined` mode\n   * height is `56dp` or in dense layout - `40dp` regardless of label.\n   * When you apply `height` prop in style the `dense` prop affects only `paddingVertical` inside `TextInput`\n   */\n  dense?: boolean;\n  /**\n   * Whether the input can have multiple lines.\n   */\n  multiline?: boolean;\n  /**\n   * The number of lines to show in the input (Android only).\n   */\n  numberOfLines?: number;\n  /**\n   * Callback that is called when the text input is focused.\n   */\n  onFocus?: (args: any) => void;\n  /**\n   * Callback that is called when the text input is blurred.\n   */\n  onBlur?: (args: any) => void;\n  /**\n   *\n   * Callback to render a custom input component such as `react-native-text-input-mask`\n   * instead of the default `TextInput` component from `react-native`.\n   *\n   * Example:\n   * ```js\n   * <TextInput\n   *   label=\"Phone number\"\n   *   render={props =>\n   *     <TextInputMask\n   *       {...props}\n   *       mask=\"+[00] [000] [000] [000]\"\n   *     />\n   *   }\n   * />\n   * ```\n   */\n  render?: (props: RenderProps) => React.ReactNode;\n  /**\n   * Value of the text input.\n   */\n  value?: string;\n  /**\n   * Pass `fontSize` prop to modify the font size inside `TextInput`.\n   * Pass `height` prop to set `TextInput` height. When `height` is passed,\n   * `dense` prop will affect only input's `paddingVertical`.\n   * Pass `paddingHorizontal` to modify horizontal padding.\n   * This can be used to get MD Guidelines v1 TextInput look.\n   */\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n  /**\n   * @supported Available in v5.x\n   * Pass style to override the default style of outlined wrapper.\n   * Overrides style when mode is set to `outlined`\n   * Example: `borderRadius`, `borderColor`\n   */\n  outlineStyle?: StyleProp<ViewStyle>;\n  /**\n   * @supported Available in v5.x\n   * Pass style to override the default style of underlined wrapper.\n   * Overrides style when mode is set to `flat`\n   * Example: `borderRadius`, `borderColor`\n   */\n  underlineStyle?: StyleProp<ViewStyle>;\n};\n\ninterface CompoundedComponent\n  extends React.ForwardRefExoticComponent<\n    Props & React.RefAttributes<TextInputHandles>\n  > {\n  Icon: React.FunctionComponent<TextInputIconProps>;\n  Affix: React.FunctionComponent<Partial<TextInputAffixProps>>;\n}\n\ntype TextInputHandles = Pick<\n  NativeTextInput,\n  'focus' | 'clear' | 'blur' | 'isFocused' | 'setNativeProps'\n>;\n\n/**\n * A component to allow users to input text.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/textinput-flat.focused.png\" />\n *     <figcaption>Flat (focused)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/textinput-flat.disabled.png\" />\n *     <figcaption>Flat (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/textinput-outlined.focused.png\" />\n *     <figcaption>Outlined (focused)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/textinput-outlined.disabled.png\" />\n *     <figcaption>Outlined (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState(\"\");\n *\n *   return (\n *     <TextInput\n *       label=\"Email\"\n *       value={text}\n *       onChangeText={text => setText(text)}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n *\n * @extends TextInput props https://reactnative.dev/docs/textinput#props\n */\n\nconst TextInput = React.forwardRef<TextInputHandles, Props>(\n  (\n    {\n      mode = 'flat',\n      dense = false,\n      disabled = false,\n      error: errorProp = false,\n      multiline = false,\n      editable = true,\n      render = (props: RenderProps) => <NativeTextInput {...props} />,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const isControlled = rest.value !== undefined;\n    const validInputValue = isControlled ? rest.value : rest.defaultValue;\n\n    const { current: labeled } = React.useRef<Animated.Value>(\n      new Animated.Value(validInputValue ? 0 : 1)\n    );\n    const { current: error } = React.useRef<Animated.Value>(\n      new Animated.Value(errorProp ? 1 : 0)\n    );\n    const [focused, setFocused] = React.useState<boolean>(false);\n    const [placeholder, setPlaceholder] = React.useState<string | undefined>(\n      ' '\n    );\n    const [uncontrolledValue, setUncontrolledValue] = React.useState<\n      string | undefined\n    >(validInputValue);\n    // Use value from props instead of local state when input is controlled\n    const value = isControlled ? rest.value : uncontrolledValue;\n\n    const [labelLayout, setLabelLayout] = React.useState<{\n      measured: boolean;\n      width: number;\n      height: number;\n    }>({\n      measured: false,\n      width: 0,\n      height: 0,\n    });\n    const [leftLayout, setLeftLayout] = React.useState<{\n      height: number | null;\n      width: number | null;\n    }>({\n      width: null,\n      height: null,\n    });\n    const [rightLayout, setRightLayout] = React.useState<{\n      height: number | null;\n      width: number | null;\n    }>({\n      width: null,\n      height: null,\n    });\n\n    const timer = React.useRef<NodeJS.Timeout | undefined>();\n\n    const root = React.useRef<NativeTextInput | undefined | null>();\n\n    const { scale } = rest.theme.animation;\n\n    React.useImperativeHandle(ref, () => ({\n      focus: () => root.current?.focus(),\n      clear: () => root.current?.clear(),\n      setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n      isFocused: () => root.current?.isFocused() || false,\n      blur: () => root.current?.blur(),\n      forceFocus: () => root.current?.focus(),\n    }));\n\n    React.useEffect(() => {\n      // When the input has an error, we wiggle the label and apply error styles\n      if (errorProp) {\n        // show error\n        Animated.timing(error, {\n          toValue: 1,\n          duration: FOCUS_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      } else {\n        // hide error\n        {\n          Animated.timing(error, {\n            toValue: 0,\n            duration: BLUR_ANIMATION_DURATION * scale,\n            // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n            useNativeDriver: true,\n          }).start();\n        }\n      }\n    }, [errorProp, scale, error]);\n\n    React.useEffect(() => {\n      // Show placeholder text only if the input is focused, or there's no label\n      // We don't show placeholder if there's a label because the label acts as placeholder\n      // When focused, the label moves up, so we can show a placeholder\n      if (focused || !rest.label) {\n        // Set the placeholder in a delay to offset the label animation\n        // If we show it immediately, they'll overlap and look ugly\n        timer.current = setTimeout(\n          () => setPlaceholder(rest.placeholder),\n          50\n        ) as unknown as NodeJS.Timeout;\n      } else {\n        // hidePlaceholder\n\n        // Issue: https://github.com/callstack/react-native-paper/issues/3138\n        // Description:   Changing the placeholder text value dynamically,\n        //                within multiline input on iOS, doesn't work properly –\n        //                the placeholder is not displayed initially.\n        // Root cause:    Placeholder initial value, which has length 0.\n        // More context:  The issue was also reproduced in react-native, using its own TextInput.\n        // Workaround:    Set an empty space character in the default value.\n        setPlaceholder(' ');\n      }\n\n      return () => {\n        if (timer.current) {\n          clearTimeout(timer.current);\n        }\n      };\n    }, [focused, rest.label, rest.placeholder]);\n\n    React.useEffect(() => {\n      // The label should be minimized if the text input is focused, or has text\n      // In minimized mode, the label moves up and becomes small\n      // workaround for animated regression for react native > 0.61\n      // https://github.com/callstack/react-native-paper/pull/1440\n      if (value || focused) {\n        // minimize label\n        Animated.timing(labeled, {\n          toValue: 0,\n          duration: BLUR_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      } else {\n        // restore label\n        {\n          Animated.timing(labeled, {\n            toValue: 1,\n            duration: FOCUS_ANIMATION_DURATION * scale,\n            // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n            useNativeDriver: true,\n          }).start();\n        }\n      }\n    }, [focused, value, labeled, scale]);\n\n    const onLeftAffixLayoutChange = (event: LayoutChangeEvent) => {\n      setLeftLayout({\n        height: event.nativeEvent.layout.height,\n        width: event.nativeEvent.layout.width,\n      });\n    };\n\n    const onRightAffixLayoutChange = (event: LayoutChangeEvent) => {\n      setRightLayout({\n        width: event.nativeEvent.layout.width,\n        height: event.nativeEvent.layout.height,\n      });\n    };\n\n    const handleFocus = (args: any) => {\n      if (disabled || !editable) {\n        return;\n      }\n\n      setFocused(true);\n\n      rest.onFocus?.(args);\n    };\n\n    const handleBlur = (args: Object) => {\n      if (!editable) {\n        return;\n      }\n\n      setFocused(false);\n      rest.onBlur?.(args);\n    };\n\n    const handleChangeText = (value: string) => {\n      if (!editable || disabled) {\n        return;\n      }\n\n      if (!isControlled) {\n        // Keep track of value in local state when input is not controlled\n        setUncontrolledValue(value);\n      }\n      rest.onChangeText?.(value);\n    };\n\n    const handleLayoutAnimatedText = (e: LayoutChangeEvent) => {\n      setLabelLayout({\n        width: e.nativeEvent.layout.width,\n        height: e.nativeEvent.layout.height,\n        measured: true,\n      });\n    };\n    const forceFocus = () => root.current?.focus();\n\n    const { maxFontSizeMultiplier = 1.5 } = rest;\n\n    if (mode === 'outlined') {\n      return (\n        <TextInputOutlined\n          dense={dense}\n          disabled={disabled}\n          error={errorProp}\n          multiline={multiline}\n          editable={editable}\n          render={render}\n          {...rest}\n          value={value}\n          parentState={{\n            labeled,\n            error,\n            focused,\n            placeholder,\n            value,\n            labelLayout,\n            leftLayout,\n            rightLayout,\n          }}\n          innerRef={(ref) => {\n            root.current = ref;\n          }}\n          onFocus={handleFocus}\n          forceFocus={forceFocus}\n          onBlur={handleBlur}\n          onChangeText={handleChangeText}\n          onLayoutAnimatedText={handleLayoutAnimatedText}\n          onLeftAffixLayoutChange={onLeftAffixLayoutChange}\n          onRightAffixLayoutChange={onRightAffixLayoutChange}\n          maxFontSizeMultiplier={maxFontSizeMultiplier}\n        />\n      );\n    }\n\n    return (\n      <TextInputFlat\n        dense={dense}\n        disabled={disabled}\n        error={errorProp}\n        multiline={multiline}\n        editable={editable}\n        render={render}\n        {...rest}\n        value={value}\n        parentState={{\n          labeled,\n          error,\n          focused,\n          placeholder,\n          value,\n          labelLayout,\n          leftLayout,\n          rightLayout,\n        }}\n        innerRef={(ref) => {\n          root.current = ref;\n        }}\n        onFocus={handleFocus}\n        forceFocus={forceFocus}\n        onBlur={handleBlur}\n        onChangeText={handleChangeText}\n        onLayoutAnimatedText={handleLayoutAnimatedText}\n        onLeftAffixLayoutChange={onLeftAffixLayoutChange}\n        onRightAffixLayoutChange={onRightAffixLayoutChange}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n      />\n    );\n  }\n) as CompoundedComponent;\n// @component ./Adornment/TextInputIcon.tsx\nTextInput.Icon = TextInputIcon;\n\n// @component ./Adornment/TextInputAffix.tsx\n// @ts-ignore Types of property 'theme' are incompatible.\nTextInput.Affix = TextInputAffix;\n\nexport default withInternalTheme(TextInput);\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,QADF,EAIEC,SAAS,IAAIC,eAJf,QAOO,cAPP;AASA,SAASC,iBAAT,QAAkC,oBAAlC;AAEA,OAAOC,cAAP,MAEO,4BAFP;AAGA,OAAOC,aAAP,MAEO,2BAFP;AAGA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAGA,MAAMC,uBAAuB,GAAG,GAAhC;AACA,MAAMC,wBAAwB,GAAG,GAAjC;;AAuJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMR,SAAS,gBAAGF,KAAK,CAACW,UAAN,CAChB,OAWEC,GAXF,KAYK;EAAA,IAXH;IACEC,IAAI,GAAG,MADT;IAEEC,KAAK,GAAG,KAFV;IAGEC,QAAQ,GAAG,KAHb;IAIEC,KAAK,EAAEC,SAAS,GAAG,KAJrB;IAKEC,SAAS,GAAG,KALd;IAMEC,QAAQ,GAAG,IANb;IAOEC,MAAM,GAAIC,KAAD,iBAAwB,oBAAC,eAAD,EAAqBA,KAArB,CAPnC;IAQE,GAAGC;EARL,CAWG;EACH,MAAMC,YAAY,GAAGD,IAAI,CAACE,KAAL,KAAeC,SAApC;EACA,MAAMC,eAAe,GAAGH,YAAY,GAAGD,IAAI,CAACE,KAAR,GAAgBF,IAAI,CAACK,YAAzD;EAEA,MAAM;IAAEC,OAAO,EAAEC;EAAX,IAAuB7B,KAAK,CAAC8B,MAAN,CAC3B,IAAI7B,QAAQ,CAAC8B,KAAb,CAAmBL,eAAe,GAAG,CAAH,GAAO,CAAzC,CAD2B,CAA7B;EAGA,MAAM;IAAEE,OAAO,EAAEZ;EAAX,IAAqBhB,KAAK,CAAC8B,MAAN,CACzB,IAAI7B,QAAQ,CAAC8B,KAAb,CAAmBd,SAAS,GAAG,CAAH,GAAO,CAAnC,CADyB,CAA3B;EAGA,MAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBjC,KAAK,CAACkC,QAAN,CAAwB,KAAxB,CAA9B;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCpC,KAAK,CAACkC,QAAN,CACpC,GADoC,CAAtC;EAGA,MAAM,CAACG,iBAAD,EAAoBC,oBAApB,IAA4CtC,KAAK,CAACkC,QAAN,CAEhDR,eAFgD,CAAlD,CAdG,CAiBH;;EACA,MAAMF,KAAK,GAAGD,YAAY,GAAGD,IAAI,CAACE,KAAR,GAAgBa,iBAA1C;EAEA,MAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCxC,KAAK,CAACkC,QAAN,CAInC;IACDO,QAAQ,EAAE,KADT;IAEDC,KAAK,EAAE,CAFN;IAGDC,MAAM,EAAE;EAHP,CAJmC,CAAtC;EASA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B7C,KAAK,CAACkC,QAAN,CAGjC;IACDQ,KAAK,EAAE,IADN;IAEDC,MAAM,EAAE;EAFP,CAHiC,CAApC;EAOA,MAAM,CAACG,WAAD,EAAcC,cAAd,IAAgC/C,KAAK,CAACkC,QAAN,CAGnC;IACDQ,KAAK,EAAE,IADN;IAEDC,MAAM,EAAE;EAFP,CAHmC,CAAtC;EAQA,MAAMK,KAAK,GAAGhD,KAAK,CAAC8B,MAAN,EAAd;EAEA,MAAMmB,IAAI,GAAGjD,KAAK,CAAC8B,MAAN,EAAb;EAEA,MAAM;IAAEoB;EAAF,IAAY5B,IAAI,CAAC6B,KAAL,CAAWC,SAA7B;EAEApD,KAAK,CAACqD,mBAAN,CAA0BzC,GAA1B,EAA+B,OAAO;IACpC0C,KAAK,EAAE;MAAA;;MAAA,wBAAML,IAAI,CAACrB,OAAX,kDAAM,cAAc0B,KAAd,EAAN;IAAA,CAD6B;IAEpCC,KAAK,EAAE;MAAA;;MAAA,yBAAMN,IAAI,CAACrB,OAAX,mDAAM,eAAc2B,KAAd,EAAN;IAAA,CAF6B;IAGpCC,cAAc,EAAGC,IAAD;MAAA;;MAAA,yBAAkBR,IAAI,CAACrB,OAAvB,mDAAkB,eAAc4B,cAAd,CAA6BC,IAA7B,CAAlB;IAAA,CAHoB;IAIpCC,SAAS,EAAE;MAAA;;MAAA,OAAM,mBAAAT,IAAI,CAACrB,OAAL,kEAAc8B,SAAd,OAA6B,KAAnC;IAAA,CAJyB;IAKpCC,IAAI,EAAE;MAAA;;MAAA,yBAAMV,IAAI,CAACrB,OAAX,mDAAM,eAAc+B,IAAd,EAAN;IAAA,CAL8B;IAMpCC,UAAU,EAAE;MAAA;;MAAA,yBAAMX,IAAI,CAACrB,OAAX,mDAAM,eAAc0B,KAAd,EAAN;IAAA;EANwB,CAAP,CAA/B;EASAtD,KAAK,CAAC6D,SAAN,CAAgB,MAAM;IACpB;IACA,IAAI5C,SAAJ,EAAe;MACb;MACAhB,QAAQ,CAAC6D,MAAT,CAAgB9C,KAAhB,EAAuB;QACrB+C,OAAO,EAAE,CADY;QAErBC,QAAQ,EAAEtD,wBAAwB,GAAGwC,KAFhB;QAGrB;QACAe,eAAe,EAAE;MAJI,CAAvB,EAKGC,KALH;IAMD,CARD,MAQO;MACL;MACA;QACEjE,QAAQ,CAAC6D,MAAT,CAAgB9C,KAAhB,EAAuB;UACrB+C,OAAO,EAAE,CADY;UAErBC,QAAQ,EAAEvD,uBAAuB,GAAGyC,KAFf;UAGrB;UACAe,eAAe,EAAE;QAJI,CAAvB,EAKGC,KALH;MAMD;IACF;EACF,CArBD,EAqBG,CAACjD,SAAD,EAAYiC,KAAZ,EAAmBlC,KAAnB,CArBH;EAuBAhB,KAAK,CAAC6D,SAAN,CAAgB,MAAM;IACpB;IACA;IACA;IACA,IAAI7B,OAAO,IAAI,CAACV,IAAI,CAAC6C,KAArB,EAA4B;MAC1B;MACA;MACAnB,KAAK,CAACpB,OAAN,GAAgBwC,UAAU,CACxB,MAAMhC,cAAc,CAACd,IAAI,CAACa,WAAN,CADI,EAExB,EAFwB,CAA1B;IAID,CAPD,MAOO;MACL;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACAC,cAAc,CAAC,GAAD,CAAd;IACD;;IAED,OAAO,MAAM;MACX,IAAIY,KAAK,CAACpB,OAAV,EAAmB;QACjByC,YAAY,CAACrB,KAAK,CAACpB,OAAP,CAAZ;MACD;IACF,CAJD;EAKD,CA7BD,EA6BG,CAACI,OAAD,EAAUV,IAAI,CAAC6C,KAAf,EAAsB7C,IAAI,CAACa,WAA3B,CA7BH;EA+BAnC,KAAK,CAAC6D,SAAN,CAAgB,MAAM;IACpB;IACA;IACA;IACA;IACA,IAAIrC,KAAK,IAAIQ,OAAb,EAAsB;MACpB;MACA/B,QAAQ,CAAC6D,MAAT,CAAgBjC,OAAhB,EAAyB;QACvBkC,OAAO,EAAE,CADc;QAEvBC,QAAQ,EAAEvD,uBAAuB,GAAGyC,KAFb;QAGvB;QACAe,eAAe,EAAE;MAJM,CAAzB,EAKGC,KALH;IAMD,CARD,MAQO;MACL;MACA;QACEjE,QAAQ,CAAC6D,MAAT,CAAgBjC,OAAhB,EAAyB;UACvBkC,OAAO,EAAE,CADc;UAEvBC,QAAQ,EAAEtD,wBAAwB,GAAGwC,KAFd;UAGvB;UACAe,eAAe,EAAE;QAJM,CAAzB,EAKGC,KALH;MAMD;IACF;EACF,CAxBD,EAwBG,CAAClC,OAAD,EAAUR,KAAV,EAAiBK,OAAjB,EAA0BqB,KAA1B,CAxBH;;EA0BA,MAAMoB,uBAAuB,GAAIC,KAAD,IAA8B;IAC5D1B,aAAa,CAAC;MACZF,MAAM,EAAE4B,KAAK,CAACC,WAAN,CAAkBC,MAAlB,CAAyB9B,MADrB;MAEZD,KAAK,EAAE6B,KAAK,CAACC,WAAN,CAAkBC,MAAlB,CAAyB/B;IAFpB,CAAD,CAAb;EAID,CALD;;EAOA,MAAMgC,wBAAwB,GAAIH,KAAD,IAA8B;IAC7DxB,cAAc,CAAC;MACbL,KAAK,EAAE6B,KAAK,CAACC,WAAN,CAAkBC,MAAlB,CAAyB/B,KADnB;MAEbC,MAAM,EAAE4B,KAAK,CAACC,WAAN,CAAkBC,MAAlB,CAAyB9B;IAFpB,CAAD,CAAd;EAID,CALD;;EAOA,MAAMgC,WAAW,GAAIlB,IAAD,IAAe;IAAA;;IACjC,IAAI1C,QAAQ,IAAI,CAACI,QAAjB,EAA2B;MACzB;IACD;;IAEDc,UAAU,CAAC,IAAD,CAAV;IAEA,iBAAAX,IAAI,CAACsD,OAAL,qEAAAtD,IAAI,EAAWmC,IAAX,CAAJ;EACD,CARD;;EAUA,MAAMoB,UAAU,GAAIpB,IAAD,IAAkB;IAAA;;IACnC,IAAI,CAACtC,QAAL,EAAe;MACb;IACD;;IAEDc,UAAU,CAAC,KAAD,CAAV;IACA,gBAAAX,IAAI,CAACwD,MAAL,mEAAAxD,IAAI,EAAUmC,IAAV,CAAJ;EACD,CAPD;;EASA,MAAMsB,gBAAgB,GAAIvD,KAAD,IAAmB;IAAA;;IAC1C,IAAI,CAACL,QAAD,IAAaJ,QAAjB,EAA2B;MACzB;IACD;;IAED,IAAI,CAACQ,YAAL,EAAmB;MACjB;MACAe,oBAAoB,CAACd,KAAD,CAApB;IACD;;IACD,sBAAAF,IAAI,CAAC0D,YAAL,+EAAA1D,IAAI,EAAgBE,KAAhB,CAAJ;EACD,CAVD;;EAYA,MAAMyD,wBAAwB,GAAIC,CAAD,IAA0B;IACzD1C,cAAc,CAAC;MACbE,KAAK,EAAEwC,CAAC,CAACV,WAAF,CAAcC,MAAd,CAAqB/B,KADf;MAEbC,MAAM,EAAEuC,CAAC,CAACV,WAAF,CAAcC,MAAd,CAAqB9B,MAFhB;MAGbF,QAAQ,EAAE;IAHG,CAAD,CAAd;EAKD,CAND;;EAOA,MAAMmB,UAAU,GAAG;IAAA;;IAAA,yBAAMX,IAAI,CAACrB,OAAX,mDAAM,eAAc0B,KAAd,EAAN;EAAA,CAAnB;;EAEA,MAAM;IAAE6B,qBAAqB,GAAG;EAA1B,IAAkC7D,IAAxC;;EAEA,IAAIT,IAAI,KAAK,UAAb,EAAyB;IACvB,oBACE,oBAAC,iBAAD;MACE,KAAK,EAAEC,KADT;MAEE,QAAQ,EAAEC,QAFZ;MAGE,KAAK,EAAEE,SAHT;MAIE,SAAS,EAAEC,SAJb;MAKE,QAAQ,EAAEC,QALZ;MAME,MAAM,EAAEC;IANV,GAOME,IAPN;MAQE,KAAK,EAAEE,KART;MASE,WAAW,EAAE;QACXK,OADW;QAEXb,KAFW;QAGXgB,OAHW;QAIXG,WAJW;QAKXX,KALW;QAMXe,WANW;QAOXK,UAPW;QAQXE;MARW,CATf;MAmBE,QAAQ,EAAGlC,GAAD,IAAS;QACjBqC,IAAI,CAACrB,OAAL,GAAehB,GAAf;MACD,CArBH;MAsBE,OAAO,EAAE+D,WAtBX;MAuBE,UAAU,EAAEf,UAvBd;MAwBE,MAAM,EAAEiB,UAxBV;MAyBE,YAAY,EAAEE,gBAzBhB;MA0BE,oBAAoB,EAAEE,wBA1BxB;MA2BE,uBAAuB,EAAEX,uBA3B3B;MA4BE,wBAAwB,EAAEI,wBA5B5B;MA6BE,qBAAqB,EAAES;IA7BzB,GADF;EAiCD;;EAED,oBACE,oBAAC,aAAD;IACE,KAAK,EAAErE,KADT;IAEE,QAAQ,EAAEC,QAFZ;IAGE,KAAK,EAAEE,SAHT;IAIE,SAAS,EAAEC,SAJb;IAKE,QAAQ,EAAEC,QALZ;IAME,MAAM,EAAEC;EANV,GAOME,IAPN;IAQE,KAAK,EAAEE,KART;IASE,WAAW,EAAE;MACXK,OADW;MAEXb,KAFW;MAGXgB,OAHW;MAIXG,WAJW;MAKXX,KALW;MAMXe,WANW;MAOXK,UAPW;MAQXE;IARW,CATf;IAmBE,QAAQ,EAAGlC,GAAD,IAAS;MACjBqC,IAAI,CAACrB,OAAL,GAAehB,GAAf;IACD,CArBH;IAsBE,OAAO,EAAE+D,WAtBX;IAuBE,UAAU,EAAEf,UAvBd;IAwBE,MAAM,EAAEiB,UAxBV;IAyBE,YAAY,EAAEE,gBAzBhB;IA0BE,oBAAoB,EAAEE,wBA1BxB;IA2BE,uBAAuB,EAAEX,uBA3B3B;IA4BE,wBAAwB,EAAEI,wBA5B5B;IA6BE,qBAAqB,EAAES;EA7BzB,GADF;AAiCD,CArRe,CAAlB,C,CAuRA;;AACAjF,SAAS,CAACkF,IAAV,GAAiB9E,aAAjB,C,CAEA;AACA;;AACAJ,SAAS,CAACmF,KAAV,GAAkBhF,cAAlB;AAEA,eAAeD,iBAAiB,CAACF,SAAD,CAAhC"}